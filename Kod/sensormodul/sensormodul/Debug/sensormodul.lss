
sensormodul.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001018  000010ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001018  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000052  00800106  00800106  000010b2  2**0
                  ALLOC
  3 .stab         00003708  00000000  00000000  000010b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000c53  00000000  00000000  000047bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000540f  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000088  00000000  00000000  0000543e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000793  00000000  00000000  000054c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000030c  00000000  00000000  00005c59  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000004a1  00000000  00000000  00005f65  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001b0  00000000  00000000  00006408  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002af  00000000  00000000  000065b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000368  00000000  00000000  00006867  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  00006bcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	86 c0       	rjmp	.+268    	; 0x10e <__ctors_end>
       2:	00 00       	nop
       4:	a1 c0       	rjmp	.+322    	; 0x148 <__bad_interrupt>
       6:	00 00       	nop
       8:	9f c0       	rjmp	.+318    	; 0x148 <__bad_interrupt>
       a:	00 00       	nop
       c:	9d c0       	rjmp	.+314    	; 0x148 <__bad_interrupt>
       e:	00 00       	nop
      10:	9b c0       	rjmp	.+310    	; 0x148 <__bad_interrupt>
      12:	00 00       	nop
      14:	99 c0       	rjmp	.+306    	; 0x148 <__bad_interrupt>
      16:	00 00       	nop
      18:	e7 c0       	rjmp	.+462    	; 0x1e8 <__vector_6>
      1a:	00 00       	nop
      1c:	95 c0       	rjmp	.+298    	; 0x148 <__bad_interrupt>
      1e:	00 00       	nop
      20:	93 c0       	rjmp	.+294    	; 0x148 <__bad_interrupt>
      22:	00 00       	nop
      24:	91 c0       	rjmp	.+290    	; 0x148 <__bad_interrupt>
      26:	00 00       	nop
      28:	8f c0       	rjmp	.+286    	; 0x148 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8d c0       	rjmp	.+282    	; 0x148 <__bad_interrupt>
      2e:	00 00       	nop
      30:	8b c0       	rjmp	.+278    	; 0x148 <__bad_interrupt>
      32:	00 00       	nop
      34:	89 c0       	rjmp	.+274    	; 0x148 <__bad_interrupt>
      36:	00 00       	nop
      38:	87 c0       	rjmp	.+270    	; 0x148 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	85 c0       	rjmp	.+266    	; 0x148 <__bad_interrupt>
      3e:	00 00       	nop
      40:	83 c0       	rjmp	.+262    	; 0x148 <__bad_interrupt>
      42:	00 00       	nop
      44:	81 c0       	rjmp	.+258    	; 0x148 <__bad_interrupt>
      46:	00 00       	nop
      48:	7f c0       	rjmp	.+254    	; 0x148 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8d c0       	rjmp	.+282    	; 0x168 <__vector_19>
      4e:	00 00       	nop
      50:	39 c1       	rjmp	.+626    	; 0x2c4 <__vector_20>
      52:	00 00       	nop
      54:	79 c0       	rjmp	.+242    	; 0x148 <__bad_interrupt>
      56:	00 00       	nop
      58:	77 c0       	rjmp	.+238    	; 0x148 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	75 c0       	rjmp	.+234    	; 0x148 <__bad_interrupt>
      5e:	00 00       	nop
      60:	ea c0       	rjmp	.+468    	; 0x236 <__vector_24>
      62:	00 00       	nop
      64:	71 c0       	rjmp	.+226    	; 0x148 <__bad_interrupt>
      66:	00 00       	nop
      68:	6f c0       	rjmp	.+222    	; 0x148 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6d c0       	rjmp	.+218    	; 0x148 <__bad_interrupt>
      6e:	00 00       	nop
      70:	6b c0       	rjmp	.+214    	; 0x148 <__bad_interrupt>
      72:	00 00       	nop
      74:	69 c0       	rjmp	.+210    	; 0x148 <__bad_interrupt>
      76:	00 00       	nop
      78:	67 c0       	rjmp	.+206    	; 0x148 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	65 c0       	rjmp	.+202    	; 0x148 <__bad_interrupt>
      7e:	00 00       	nop
      80:	63 c0       	rjmp	.+198    	; 0x148 <__bad_interrupt>
      82:	00 00       	nop
      84:	61 c0       	rjmp	.+194    	; 0x148 <__bad_interrupt>
      86:	00 00       	nop
      88:	5f c0       	rjmp	.+190    	; 0x148 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <__addsf3x+0x3c>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e4       	ldi	r29, 0x40	; 64
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	11 e0       	ldi	r17, 0x01	; 1
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	e8 e1       	ldi	r30, 0x18	; 24
     122:	f0 e1       	ldi	r31, 0x10	; 16
     124:	00 e0       	ldi	r16, 0x00	; 0
     126:	0b bf       	out	0x3b, r16	; 59
     128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x14>
     12a:	07 90       	elpm	r0, Z+
     12c:	0d 92       	st	X+, r0
     12e:	a6 30       	cpi	r26, 0x06	; 6
     130:	b1 07       	cpc	r27, r17
     132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x10>

00000134 <__do_clear_bss>:
     134:	21 e0       	ldi	r18, 0x01	; 1
     136:	a6 e0       	ldi	r26, 0x06	; 6
     138:	b1 e0       	ldi	r27, 0x01	; 1
     13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
     13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
     13e:	a8 35       	cpi	r26, 0x58	; 88
     140:	b2 07       	cpc	r27, r18
     142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
     144:	e1 d0       	rcall	.+450    	; 0x308 <main>
     146:	66 c7       	rjmp	.+3788   	; 0x1014 <_exit>

00000148 <__bad_interrupt>:
     148:	5b cf       	rjmp	.-330    	; 0x0 <__vectors>

0000014a <_Z10USART_Initj>:

//Initiera USART
void USART_Init( unsigned int baud )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(baud>>8);
     14a:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)baud;
     14e:	80 93 c4 00 	sts	0x00C4, r24
	/* Enable receiver and interrupts */
	UCSR0B = (1<<RXEN0)|(1<<RXCIE0);
     152:	80 e9       	ldi	r24, 0x90	; 144
     154:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (0<<USBS0)|(3<<UCSZ00);
     158:	86 e0       	ldi	r24, 0x06	; 6
     15a:	80 93 c2 00 	sts	0x00C2, r24
     15e:	08 95       	ret

00000160 <_Z17handleInDataArrayv>:



void handleInDataArray(){
sensormodul.outDataArray[0]=0;
sensormodul.outDataArray[0]=1;
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	80 93 1f 01 	sts	0x011F, r24
     166:	08 95       	ret

00000168 <__vector_19>:

}

//Extremt känslig för tillägg av kod
ISR(SPI_STC_vect){
     168:	1f 92       	push	r1
     16a:	0f 92       	push	r0
     16c:	0f b6       	in	r0, 0x3f	; 63
     16e:	0f 92       	push	r0
     170:	11 24       	eor	r1, r1
     172:	0b b6       	in	r0, 0x3b	; 59
     174:	0f 92       	push	r0
     176:	2f 93       	push	r18
     178:	3f 93       	push	r19
     17a:	4f 93       	push	r20
     17c:	5f 93       	push	r21
     17e:	8f 93       	push	r24
     180:	9f 93       	push	r25
     182:	ef 93       	push	r30
     184:	ff 93       	push	r31
	sensormodul.position++;
     186:	e8 e3       	ldi	r30, 0x38	; 56
     188:	f1 e0       	ldi	r31, 0x01	; 1
     18a:	80 81       	ld	r24, Z
     18c:	91 81       	ldd	r25, Z+1	; 0x01
     18e:	01 96       	adiw	r24, 0x01	; 1
     190:	91 83       	std	Z+1, r25	; 0x01
     192:	80 83       	st	Z, r24
	SPDR = sensormodul.outDataArray[sensormodul.position];
     194:	fc 01       	movw	r30, r24
     196:	ea 5f       	subi	r30, 0xFA	; 250
     198:	fe 4f       	sbci	r31, 0xFE	; 254
     19a:	21 8d       	ldd	r18, Z+25	; 0x19
     19c:	2e bd       	out	0x2e, r18	; 46
	sensormodul.inDataArray[sensormodul.position-1] = SPDR;
     19e:	2e b5       	in	r18, 0x2e	; 46
     1a0:	31 97       	sbiw	r30, 0x01	; 1
     1a2:	20 83       	st	Z, r18
	
	if ((sensormodul.position == (sensormodul.inDataArray[0]+1))&(sensormodul.inDataArray[0]!= 0)){
     1a4:	50 91 06 01 	lds	r21, 0x0106
     1a8:	25 2f       	mov	r18, r21
     1aa:	30 e0       	ldi	r19, 0x00	; 0
     1ac:	2f 5f       	subi	r18, 0xFF	; 255
     1ae:	3f 4f       	sbci	r19, 0xFF	; 255
     1b0:	41 e0       	ldi	r20, 0x01	; 1
     1b2:	82 17       	cp	r24, r18
     1b4:	93 07       	cpc	r25, r19
     1b6:	09 f0       	breq	.+2      	; 0x1ba <__vector_19+0x52>
     1b8:	40 e0       	ldi	r20, 0x00	; 0
     1ba:	44 23       	and	r20, r20
     1bc:	31 f0       	breq	.+12     	; 0x1ca <__vector_19+0x62>
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	51 11       	cpse	r21, r1
     1c2:	01 c0       	rjmp	.+2      	; 0x1c6 <__vector_19+0x5e>
     1c4:	80 e0       	ldi	r24, 0x00	; 0
     1c6:	81 11       	cpse	r24, r1
		PORTC |= (1<<PORTC0);
     1c8:	40 9a       	sbi	0x08, 0	; 8
	}
}
     1ca:	ff 91       	pop	r31
     1cc:	ef 91       	pop	r30
     1ce:	9f 91       	pop	r25
     1d0:	8f 91       	pop	r24
     1d2:	5f 91       	pop	r21
     1d4:	4f 91       	pop	r20
     1d6:	3f 91       	pop	r19
     1d8:	2f 91       	pop	r18
     1da:	0f 90       	pop	r0
     1dc:	0b be       	out	0x3b, r0	; 59
     1de:	0f 90       	pop	r0
     1e0:	0f be       	out	0x3f, r0	; 63
     1e2:	0f 90       	pop	r0
     1e4:	1f 90       	pop	r1
     1e6:	18 95       	reti

000001e8 <__vector_6>:

ISR(PCINT2_vect){
     1e8:	1f 92       	push	r1
     1ea:	0f 92       	push	r0
     1ec:	0f b6       	in	r0, 0x3f	; 63
     1ee:	0f 92       	push	r0
     1f0:	11 24       	eor	r1, r1
     1f2:	0b b6       	in	r0, 0x3b	; 59
     1f4:	0f 92       	push	r0
     1f6:	2f 93       	push	r18
     1f8:	3f 93       	push	r19
     1fa:	4f 93       	push	r20
     1fc:	5f 93       	push	r21
     1fe:	6f 93       	push	r22
     200:	7f 93       	push	r23
     202:	8f 93       	push	r24
     204:	9f 93       	push	r25
     206:	af 93       	push	r26
     208:	bf 93       	push	r27
     20a:	ef 93       	push	r30
     20c:	ff 93       	push	r31
	handleInDataArray();
     20e:	a8 df       	rcall	.-176    	; 0x160 <_Z17handleInDataArrayv>
}
     210:	ff 91       	pop	r31
     212:	ef 91       	pop	r30
     214:	bf 91       	pop	r27
     216:	af 91       	pop	r26
     218:	9f 91       	pop	r25
     21a:	8f 91       	pop	r24
     21c:	7f 91       	pop	r23
     21e:	6f 91       	pop	r22
     220:	5f 91       	pop	r21
     222:	4f 91       	pop	r20
     224:	3f 91       	pop	r19
     226:	2f 91       	pop	r18
     228:	0f 90       	pop	r0
     22a:	0b be       	out	0x3b, r0	; 59
     22c:	0f 90       	pop	r0
     22e:	0f be       	out	0x3f, r0	; 63
     230:	0f 90       	pop	r0
     232:	1f 90       	pop	r1
     234:	18 95       	reti

00000236 <__vector_24>:
		
//ADC Conversion Complete Interrupt Service Routine (ISR)
ISR(ADC_vect)
{	
     236:	1f 92       	push	r1
     238:	0f 92       	push	r0
     23a:	0f b6       	in	r0, 0x3f	; 63
     23c:	0f 92       	push	r0
     23e:	11 24       	eor	r1, r1
     240:	0b b6       	in	r0, 0x3b	; 59
     242:	0f 92       	push	r0
     244:	2f 93       	push	r18
     246:	3f 93       	push	r19
     248:	4f 93       	push	r20
     24a:	5f 93       	push	r21
     24c:	6f 93       	push	r22
     24e:	7f 93       	push	r23
     250:	8f 93       	push	r24
     252:	9f 93       	push	r25
     254:	af 93       	push	r26
     256:	bf 93       	push	r27
     258:	ef 93       	push	r30
     25a:	ff 93       	push	r31
	sei();
     25c:	78 94       	sei
	decadc = ADCH;
     25e:	60 91 79 00 	lds	r22, 0x0079
     262:	70 e0       	ldi	r23, 0x00	; 0
     264:	80 e0       	ldi	r24, 0x00	; 0
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	b5 d3       	rcall	.+1898   	; 0x9d4 <__floatunsisf>
     26a:	60 93 44 01 	sts	0x0144, r22
     26e:	70 93 45 01 	sts	0x0145, r23
     272:	80 93 46 01 	sts	0x0146, r24
     276:	90 93 47 01 	sts	0x0147, r25
	spanning = decadc*5/256;
     27a:	20 e0       	ldi	r18, 0x00	; 0
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	40 ea       	ldi	r20, 0xA0	; 160
     280:	50 e4       	ldi	r21, 0x40	; 64
     282:	36 d4       	rcall	.+2156   	; 0xaf0 <__mulsf3>
     284:	20 e0       	ldi	r18, 0x00	; 0
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	40 e8       	ldi	r20, 0x80	; 128
     28a:	5b e3       	ldi	r21, 0x3B	; 59
     28c:	31 d4       	rcall	.+2146   	; 0xaf0 <__mulsf3>
     28e:	60 93 40 01 	sts	0x0140, r22
     292:	70 93 41 01 	sts	0x0141, r23
     296:	80 93 42 01 	sts	0x0142, r24
     29a:	90 93 43 01 	sts	0x0143, r25
}
     29e:	ff 91       	pop	r31
     2a0:	ef 91       	pop	r30
     2a2:	bf 91       	pop	r27
     2a4:	af 91       	pop	r26
     2a6:	9f 91       	pop	r25
     2a8:	8f 91       	pop	r24
     2aa:	7f 91       	pop	r23
     2ac:	6f 91       	pop	r22
     2ae:	5f 91       	pop	r21
     2b0:	4f 91       	pop	r20
     2b2:	3f 91       	pop	r19
     2b4:	2f 91       	pop	r18
     2b6:	0f 90       	pop	r0
     2b8:	0b be       	out	0x3b, r0	; 59
     2ba:	0f 90       	pop	r0
     2bc:	0f be       	out	0x3f, r0	; 63
     2be:	0f 90       	pop	r0
     2c0:	1f 90       	pop	r1
     2c2:	18 95       	reti

000002c4 <__vector_20>:

//Avbrott för USART, kanske disabla efter några läsningar för att inte avbryta ADC
ISR(USART0_RX_vect){
     2c4:	1f 92       	push	r1
     2c6:	0f 92       	push	r0
     2c8:	0f b6       	in	r0, 0x3f	; 63
     2ca:	0f 92       	push	r0
     2cc:	11 24       	eor	r1, r1
     2ce:	8f 93       	push	r24
     2d0:	9f 93       	push	r25
	indata=UDR0;
     2d2:	80 91 c6 00 	lds	r24, 0x00C6
     2d6:	80 93 3f 01 	sts	0x013F, r24
		
	if(indata==startbit){
     2da:	90 91 04 01 	lds	r25, 0x0104
     2de:	89 13       	cpse	r24, r25
     2e0:	0c c0       	rjmp	.+24     	; 0x2fa <__vector_20+0x36>
		sensormodul.outDataArray[0] = 3;
     2e2:	83 e0       	ldi	r24, 0x03	; 3
     2e4:	80 93 1f 01 	sts	0x011F, r24
		sensormodul.outDataArray[1] = 'r';
     2e8:	82 e7       	ldi	r24, 0x72	; 114
     2ea:	80 93 20 01 	sts	0x0120, r24
		sensormodul.outDataArray[2] = '0';
     2ee:	80 e3       	ldi	r24, 0x30	; 48
     2f0:	80 93 21 01 	sts	0x0121, r24
		sensormodul.outDataArray[3] = '1';
     2f4:	81 e3       	ldi	r24, 0x31	; 49
     2f6:	80 93 22 01 	sts	0x0122, r24
		//skicka RFID
	}
}
     2fa:	9f 91       	pop	r25
     2fc:	8f 91       	pop	r24
     2fe:	0f 90       	pop	r0
     300:	0f be       	out	0x3f, r0	; 63
     302:	0f 90       	pop	r0
     304:	1f 90       	pop	r1
     306:	18 95       	reti

00000308 <main>:

int main(void)
{	
	
	sensormodul.SPI_Init();
     308:	86 e0       	ldi	r24, 0x06	; 6
     30a:	91 e0       	ldi	r25, 0x01	; 1
     30c:	a6 d2       	rcall	.+1356   	; 0x85a <_ZN5Slave8SPI_InitEv>
	USART_Init(383);
     30e:	8f e7       	ldi	r24, 0x7F	; 127
     310:	91 e0       	ldi	r25, 0x01	; 1
     312:	1b df       	rcall	.-458    	; 0x14a <_Z10USART_Initj>
	
	DDRA = 0x00;			// Configure PortA as input
     314:	11 b8       	out	0x01, r1	; 1
							// PA0 is ADC0 input
							
	ADCSRA = 0x8F;			// Enable the ADC and its interrupt feature
     316:	ea e7       	ldi	r30, 0x7A	; 122
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	8f e8       	ldi	r24, 0x8F	; 143
     31c:	80 83       	st	Z, r24
							// and set the ACD clock pre-scalar to clk/128
	ADMUX = 0x20;			// Select 5V as Vref, left justify
     31e:	80 e2       	ldi	r24, 0x20	; 32
     320:	80 93 7c 00 	sts	0x007C, r24
							// data registers and select ADC0 as input channel
	
	sei();					// Enable Global Interrupts
     324:	78 94       	sei
	ADCSRA |= 1<<ADSC;		// Start Conversion
     326:	80 81       	ld	r24, Z
     328:	80 64       	ori	r24, 0x40	; 64
     32a:	80 83       	st	Z, r24
	
	while(1){				// Wait forever
		
		if(ADMUX == 0x20){	//konvertering av A0
     32c:	cc e7       	ldi	r28, 0x7C	; 124
     32e:	d0 e0       	ldi	r29, 0x00	; 0
		else if(ADMUX == 0x22 || 0x23 || 0x24 || 0x25){	//konvertering av A2-A5 (kortdistanssensorer)
			sensordata[savepos]	= round(12.5*pow(spanning,4)-100.7*pow(spanning,3)+291.4*pow(spanning,2)-367.2*spanning+189.6);
		}
		
		if (gyromode){
			ADMUX = 0x27;
     330:	0f 2e       	mov	r0, r31
     332:	f7 e2       	ldi	r31, 0x27	; 39
     334:	bf 2e       	mov	r11, r31
     336:	f0 2d       	mov	r31, r0
		}
		
		if(ADMUX == 0x26 or (!gyromode and ADMUX == 0x27)){
			ADMUX = 0x20;
     338:	68 94       	set
     33a:	aa 24       	eor	r10, r10
     33c:	a5 f8       	bld	r10, 5
			
			sensormodul.outDataArray[0] = 5;
			sensormodul.outDataArray[1] = 'a';
			sensormodul.outDataArray[2] =  savepos + 48;
			sensormodul.outDataArray[3] = (sensordata[savepos]/100) + 48; //plats 4
			sensormodul.outDataArray[4] = ((sensordata[savepos]/10) %10) + 48; // plats 5
     33e:	0a e0       	ldi	r16, 0x0A	; 10
     340:	10 e0       	ldi	r17, 0x00	; 0
	sei();					// Enable Global Interrupts
	ADCSRA |= 1<<ADSC;		// Start Conversion
	
	while(1){				// Wait forever
		
		if(ADMUX == 0x20){	//konvertering av A0
     342:	88 81       	ld	r24, Y
     344:	80 32       	cpi	r24, 0x20	; 32
     346:	09 f0       	breq	.+2      	; 0x34a <main+0x42>
     348:	70 c0       	rjmp	.+224    	; 0x42a <main+0x122>
			sensordata[savepos]	= round(45.64*pow(spanning,4)-320.2*pow(spanning,3)+830.3*pow(spanning,2)-984.9*spanning+524.4);
     34a:	c0 90 40 01 	lds	r12, 0x0140
     34e:	d0 90 41 01 	lds	r13, 0x0141
     352:	e0 90 42 01 	lds	r14, 0x0142
     356:	f0 90 43 01 	lds	r15, 0x0143
     35a:	20 e0       	ldi	r18, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	40 e8       	ldi	r20, 0x80	; 128
     360:	50 e4       	ldi	r21, 0x40	; 64
     362:	c7 01       	movw	r24, r14
     364:	b6 01       	movw	r22, r12
     366:	27 d4       	rcall	.+2126   	; 0xbb6 <pow>
     368:	46 2e       	mov	r4, r22
     36a:	57 2e       	mov	r5, r23
     36c:	68 2e       	mov	r6, r24
     36e:	79 2e       	mov	r7, r25
     370:	20 e0       	ldi	r18, 0x00	; 0
     372:	30 e0       	ldi	r19, 0x00	; 0
     374:	40 e4       	ldi	r20, 0x40	; 64
     376:	50 e4       	ldi	r21, 0x40	; 64
     378:	c7 01       	movw	r24, r14
     37a:	b6 01       	movw	r22, r12
     37c:	1c d4       	rcall	.+2104   	; 0xbb6 <pow>
     37e:	26 2e       	mov	r2, r22
     380:	37 2e       	mov	r3, r23
     382:	88 2e       	mov	r8, r24
     384:	99 2e       	mov	r9, r25
     386:	2c e5       	ldi	r18, 0x5C	; 92
     388:	3f e8       	ldi	r19, 0x8F	; 143
     38a:	46 e3       	ldi	r20, 0x36	; 54
     38c:	52 e4       	ldi	r21, 0x42	; 66
     38e:	64 2d       	mov	r22, r4
     390:	75 2d       	mov	r23, r5
     392:	86 2d       	mov	r24, r6
     394:	97 2d       	mov	r25, r7
     396:	ac d3       	rcall	.+1880   	; 0xaf0 <__mulsf3>
     398:	2b 01       	movw	r4, r22
     39a:	3c 01       	movw	r6, r24
     39c:	2a e9       	ldi	r18, 0x9A	; 154
     39e:	39 e1       	ldi	r19, 0x19	; 25
     3a0:	40 ea       	ldi	r20, 0xA0	; 160
     3a2:	53 e4       	ldi	r21, 0x43	; 67
     3a4:	62 2d       	mov	r22, r2
     3a6:	73 2d       	mov	r23, r3
     3a8:	88 2d       	mov	r24, r8
     3aa:	99 2d       	mov	r25, r9
     3ac:	a1 d3       	rcall	.+1858   	; 0xaf0 <__mulsf3>
     3ae:	9b 01       	movw	r18, r22
     3b0:	ac 01       	movw	r20, r24
     3b2:	c3 01       	movw	r24, r6
     3b4:	b2 01       	movw	r22, r4
     3b6:	78 d2       	rcall	.+1264   	; 0x8a8 <__subsf3>
     3b8:	2b 01       	movw	r4, r22
     3ba:	3c 01       	movw	r6, r24
     3bc:	a7 01       	movw	r20, r14
     3be:	96 01       	movw	r18, r12
     3c0:	c7 01       	movw	r24, r14
     3c2:	b6 01       	movw	r22, r12
     3c4:	95 d3       	rcall	.+1834   	; 0xaf0 <__mulsf3>
     3c6:	23 e3       	ldi	r18, 0x33	; 51
     3c8:	33 e9       	ldi	r19, 0x93	; 147
     3ca:	4f e4       	ldi	r20, 0x4F	; 79
     3cc:	54 e4       	ldi	r21, 0x44	; 68
     3ce:	90 d3       	rcall	.+1824   	; 0xaf0 <__mulsf3>
     3d0:	9b 01       	movw	r18, r22
     3d2:	ac 01       	movw	r20, r24
     3d4:	c3 01       	movw	r24, r6
     3d6:	b2 01       	movw	r22, r4
     3d8:	68 d2       	rcall	.+1232   	; 0x8aa <__addsf3>
     3da:	2b 01       	movw	r4, r22
     3dc:	3c 01       	movw	r6, r24
     3de:	2a e9       	ldi	r18, 0x9A	; 154
     3e0:	39 e3       	ldi	r19, 0x39	; 57
     3e2:	46 e7       	ldi	r20, 0x76	; 118
     3e4:	54 e4       	ldi	r21, 0x44	; 68
     3e6:	c7 01       	movw	r24, r14
     3e8:	b6 01       	movw	r22, r12
     3ea:	82 d3       	rcall	.+1796   	; 0xaf0 <__mulsf3>
     3ec:	9b 01       	movw	r18, r22
     3ee:	ac 01       	movw	r20, r24
     3f0:	c3 01       	movw	r24, r6
     3f2:	b2 01       	movw	r22, r4
     3f4:	59 d2       	rcall	.+1202   	; 0x8a8 <__subsf3>
     3f6:	2a e9       	ldi	r18, 0x9A	; 154
     3f8:	39 e1       	ldi	r19, 0x19	; 25
     3fa:	43 e0       	ldi	r20, 0x03	; 3
     3fc:	54 e4       	ldi	r21, 0x44	; 68
     3fe:	55 d2       	rcall	.+1194   	; 0x8aa <__addsf3>
     400:	26 d4       	rcall	.+2124   	; 0xc4e <round>
     402:	e0 90 48 01 	lds	r14, 0x0148
     406:	f0 90 49 01 	lds	r15, 0x0149
     40a:	97 01       	movw	r18, r14
     40c:	22 0f       	add	r18, r18
     40e:	33 1f       	adc	r19, r19
     410:	0f 2e       	mov	r0, r31
     412:	fa e4       	ldi	r31, 0x4A	; 74
     414:	ef 2e       	mov	r14, r31
     416:	f1 e0       	ldi	r31, 0x01	; 1
     418:	ff 2e       	mov	r15, r31
     41a:	f0 2d       	mov	r31, r0
     41c:	e2 0e       	add	r14, r18
     41e:	f3 1e       	adc	r15, r19
     420:	a8 d2       	rcall	.+1360   	; 0x972 <__fixsfsi>
     422:	f7 01       	movw	r30, r14
     424:	71 83       	std	Z+1, r23	; 0x01
     426:	60 83       	st	Z, r22
     428:	bc c1       	rjmp	.+888    	; 0x7a2 <main+0x49a>
		}
		
		else if(ADMUX == 0x21){ //konvertering av A1
     42a:	88 81       	ld	r24, Y
     42c:	81 32       	cpi	r24, 0x21	; 33
     42e:	09 f0       	breq	.+2      	; 0x432 <main+0x12a>
     430:	70 c0       	rjmp	.+224    	; 0x512 <main+0x20a>
			sensordata[savepos]	= round(1.031*pow(spanning,4)-68*pow(spanning,3)+364.8*pow(spanning,2)-683.2*spanning+492.2);
     432:	c0 90 40 01 	lds	r12, 0x0140
     436:	d0 90 41 01 	lds	r13, 0x0141
     43a:	e0 90 42 01 	lds	r14, 0x0142
     43e:	f0 90 43 01 	lds	r15, 0x0143
     442:	20 e0       	ldi	r18, 0x00	; 0
     444:	30 e0       	ldi	r19, 0x00	; 0
     446:	40 e8       	ldi	r20, 0x80	; 128
     448:	50 e4       	ldi	r21, 0x40	; 64
     44a:	c7 01       	movw	r24, r14
     44c:	b6 01       	movw	r22, r12
     44e:	b3 d3       	rcall	.+1894   	; 0xbb6 <pow>
     450:	46 2e       	mov	r4, r22
     452:	57 2e       	mov	r5, r23
     454:	68 2e       	mov	r6, r24
     456:	79 2e       	mov	r7, r25
     458:	20 e0       	ldi	r18, 0x00	; 0
     45a:	30 e0       	ldi	r19, 0x00	; 0
     45c:	40 e4       	ldi	r20, 0x40	; 64
     45e:	50 e4       	ldi	r21, 0x40	; 64
     460:	c7 01       	movw	r24, r14
     462:	b6 01       	movw	r22, r12
     464:	a8 d3       	rcall	.+1872   	; 0xbb6 <pow>
     466:	26 2e       	mov	r2, r22
     468:	37 2e       	mov	r3, r23
     46a:	88 2e       	mov	r8, r24
     46c:	99 2e       	mov	r9, r25
     46e:	2f ec       	ldi	r18, 0xCF	; 207
     470:	37 ef       	ldi	r19, 0xF7	; 247
     472:	43 e8       	ldi	r20, 0x83	; 131
     474:	5f e3       	ldi	r21, 0x3F	; 63
     476:	64 2d       	mov	r22, r4
     478:	75 2d       	mov	r23, r5
     47a:	86 2d       	mov	r24, r6
     47c:	97 2d       	mov	r25, r7
     47e:	38 d3       	rcall	.+1648   	; 0xaf0 <__mulsf3>
     480:	2b 01       	movw	r4, r22
     482:	3c 01       	movw	r6, r24
     484:	20 e0       	ldi	r18, 0x00	; 0
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	48 e8       	ldi	r20, 0x88	; 136
     48a:	52 e4       	ldi	r21, 0x42	; 66
     48c:	62 2d       	mov	r22, r2
     48e:	73 2d       	mov	r23, r3
     490:	88 2d       	mov	r24, r8
     492:	99 2d       	mov	r25, r9
     494:	2d d3       	rcall	.+1626   	; 0xaf0 <__mulsf3>
     496:	9b 01       	movw	r18, r22
     498:	ac 01       	movw	r20, r24
     49a:	c3 01       	movw	r24, r6
     49c:	b2 01       	movw	r22, r4
     49e:	04 d2       	rcall	.+1032   	; 0x8a8 <__subsf3>
     4a0:	2b 01       	movw	r4, r22
     4a2:	3c 01       	movw	r6, r24
     4a4:	a7 01       	movw	r20, r14
     4a6:	96 01       	movw	r18, r12
     4a8:	c7 01       	movw	r24, r14
     4aa:	b6 01       	movw	r22, r12
     4ac:	21 d3       	rcall	.+1602   	; 0xaf0 <__mulsf3>
     4ae:	26 e6       	ldi	r18, 0x66	; 102
     4b0:	36 e6       	ldi	r19, 0x66	; 102
     4b2:	46 eb       	ldi	r20, 0xB6	; 182
     4b4:	53 e4       	ldi	r21, 0x43	; 67
     4b6:	1c d3       	rcall	.+1592   	; 0xaf0 <__mulsf3>
     4b8:	9b 01       	movw	r18, r22
     4ba:	ac 01       	movw	r20, r24
     4bc:	c3 01       	movw	r24, r6
     4be:	b2 01       	movw	r22, r4
     4c0:	f4 d1       	rcall	.+1000   	; 0x8aa <__addsf3>
     4c2:	2b 01       	movw	r4, r22
     4c4:	3c 01       	movw	r6, r24
     4c6:	2d ec       	ldi	r18, 0xCD	; 205
     4c8:	3c ec       	ldi	r19, 0xCC	; 204
     4ca:	4a e2       	ldi	r20, 0x2A	; 42
     4cc:	54 e4       	ldi	r21, 0x44	; 68
     4ce:	c7 01       	movw	r24, r14
     4d0:	b6 01       	movw	r22, r12
     4d2:	0e d3       	rcall	.+1564   	; 0xaf0 <__mulsf3>
     4d4:	9b 01       	movw	r18, r22
     4d6:	ac 01       	movw	r20, r24
     4d8:	c3 01       	movw	r24, r6
     4da:	b2 01       	movw	r22, r4
     4dc:	e5 d1       	rcall	.+970    	; 0x8a8 <__subsf3>
     4de:	2a e9       	ldi	r18, 0x9A	; 154
     4e0:	39 e1       	ldi	r19, 0x19	; 25
     4e2:	46 ef       	ldi	r20, 0xF6	; 246
     4e4:	53 e4       	ldi	r21, 0x43	; 67
     4e6:	e1 d1       	rcall	.+962    	; 0x8aa <__addsf3>
     4e8:	b2 d3       	rcall	.+1892   	; 0xc4e <round>
     4ea:	e0 90 48 01 	lds	r14, 0x0148
     4ee:	f0 90 49 01 	lds	r15, 0x0149
     4f2:	97 01       	movw	r18, r14
     4f4:	22 0f       	add	r18, r18
     4f6:	33 1f       	adc	r19, r19
     4f8:	0f 2e       	mov	r0, r31
     4fa:	fa e4       	ldi	r31, 0x4A	; 74
     4fc:	ef 2e       	mov	r14, r31
     4fe:	f1 e0       	ldi	r31, 0x01	; 1
     500:	ff 2e       	mov	r15, r31
     502:	f0 2d       	mov	r31, r0
     504:	e2 0e       	add	r14, r18
     506:	f3 1e       	adc	r15, r19
     508:	34 d2       	rcall	.+1128   	; 0x972 <__fixsfsi>
     50a:	f7 01       	movw	r30, r14
     50c:	71 83       	std	Z+1, r23	; 0x01
     50e:	60 83       	st	Z, r22
     510:	48 c1       	rjmp	.+656    	; 0x7a2 <main+0x49a>
		}
		
		else if(ADMUX == 0x26){	//konvertering av A7 (mellandistanssensorn)
     512:	88 81       	ld	r24, Y
     514:	86 32       	cpi	r24, 0x26	; 38
     516:	09 f0       	breq	.+2      	; 0x51a <main+0x212>
     518:	70 c0       	rjmp	.+224    	; 0x5fa <main+0x2f2>
			sensordata[savepos]	= round(8.139*pow(spanning,4)-81.21*pow(spanning,3)+282.6*pow(spanning,2)-414.2*spanning+259.7);
     51a:	c0 90 40 01 	lds	r12, 0x0140
     51e:	d0 90 41 01 	lds	r13, 0x0141
     522:	e0 90 42 01 	lds	r14, 0x0142
     526:	f0 90 43 01 	lds	r15, 0x0143
     52a:	20 e0       	ldi	r18, 0x00	; 0
     52c:	30 e0       	ldi	r19, 0x00	; 0
     52e:	40 e8       	ldi	r20, 0x80	; 128
     530:	50 e4       	ldi	r21, 0x40	; 64
     532:	c7 01       	movw	r24, r14
     534:	b6 01       	movw	r22, r12
     536:	3f d3       	rcall	.+1662   	; 0xbb6 <pow>
     538:	46 2e       	mov	r4, r22
     53a:	57 2e       	mov	r5, r23
     53c:	68 2e       	mov	r6, r24
     53e:	79 2e       	mov	r7, r25
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	40 e4       	ldi	r20, 0x40	; 64
     546:	50 e4       	ldi	r21, 0x40	; 64
     548:	c7 01       	movw	r24, r14
     54a:	b6 01       	movw	r22, r12
     54c:	34 d3       	rcall	.+1640   	; 0xbb6 <pow>
     54e:	26 2e       	mov	r2, r22
     550:	37 2e       	mov	r3, r23
     552:	88 2e       	mov	r8, r24
     554:	99 2e       	mov	r9, r25
     556:	28 e5       	ldi	r18, 0x58	; 88
     558:	39 e3       	ldi	r19, 0x39	; 57
     55a:	42 e0       	ldi	r20, 0x02	; 2
     55c:	51 e4       	ldi	r21, 0x41	; 65
     55e:	64 2d       	mov	r22, r4
     560:	75 2d       	mov	r23, r5
     562:	86 2d       	mov	r24, r6
     564:	97 2d       	mov	r25, r7
     566:	c4 d2       	rcall	.+1416   	; 0xaf0 <__mulsf3>
     568:	2b 01       	movw	r4, r22
     56a:	3c 01       	movw	r6, r24
     56c:	25 e8       	ldi	r18, 0x85	; 133
     56e:	3b e6       	ldi	r19, 0x6B	; 107
     570:	42 ea       	ldi	r20, 0xA2	; 162
     572:	52 e4       	ldi	r21, 0x42	; 66
     574:	62 2d       	mov	r22, r2
     576:	73 2d       	mov	r23, r3
     578:	88 2d       	mov	r24, r8
     57a:	99 2d       	mov	r25, r9
     57c:	b9 d2       	rcall	.+1394   	; 0xaf0 <__mulsf3>
     57e:	9b 01       	movw	r18, r22
     580:	ac 01       	movw	r20, r24
     582:	c3 01       	movw	r24, r6
     584:	b2 01       	movw	r22, r4
     586:	90 d1       	rcall	.+800    	; 0x8a8 <__subsf3>
     588:	2b 01       	movw	r4, r22
     58a:	3c 01       	movw	r6, r24
     58c:	a7 01       	movw	r20, r14
     58e:	96 01       	movw	r18, r12
     590:	c7 01       	movw	r24, r14
     592:	b6 01       	movw	r22, r12
     594:	ad d2       	rcall	.+1370   	; 0xaf0 <__mulsf3>
     596:	2d ec       	ldi	r18, 0xCD	; 205
     598:	3c e4       	ldi	r19, 0x4C	; 76
     59a:	4d e8       	ldi	r20, 0x8D	; 141
     59c:	53 e4       	ldi	r21, 0x43	; 67
     59e:	a8 d2       	rcall	.+1360   	; 0xaf0 <__mulsf3>
     5a0:	9b 01       	movw	r18, r22
     5a2:	ac 01       	movw	r20, r24
     5a4:	c3 01       	movw	r24, r6
     5a6:	b2 01       	movw	r22, r4
     5a8:	80 d1       	rcall	.+768    	; 0x8aa <__addsf3>
     5aa:	2b 01       	movw	r4, r22
     5ac:	3c 01       	movw	r6, r24
     5ae:	2a e9       	ldi	r18, 0x9A	; 154
     5b0:	39 e1       	ldi	r19, 0x19	; 25
     5b2:	4f ec       	ldi	r20, 0xCF	; 207
     5b4:	53 e4       	ldi	r21, 0x43	; 67
     5b6:	c7 01       	movw	r24, r14
     5b8:	b6 01       	movw	r22, r12
     5ba:	9a d2       	rcall	.+1332   	; 0xaf0 <__mulsf3>
     5bc:	9b 01       	movw	r18, r22
     5be:	ac 01       	movw	r20, r24
     5c0:	c3 01       	movw	r24, r6
     5c2:	b2 01       	movw	r22, r4
     5c4:	71 d1       	rcall	.+738    	; 0x8a8 <__subsf3>
     5c6:	2a e9       	ldi	r18, 0x9A	; 154
     5c8:	39 ed       	ldi	r19, 0xD9	; 217
     5ca:	41 e8       	ldi	r20, 0x81	; 129
     5cc:	53 e4       	ldi	r21, 0x43	; 67
     5ce:	6d d1       	rcall	.+730    	; 0x8aa <__addsf3>
     5d0:	3e d3       	rcall	.+1660   	; 0xc4e <round>
     5d2:	e0 90 48 01 	lds	r14, 0x0148
     5d6:	f0 90 49 01 	lds	r15, 0x0149
     5da:	97 01       	movw	r18, r14
     5dc:	22 0f       	add	r18, r18
     5de:	33 1f       	adc	r19, r19
     5e0:	0f 2e       	mov	r0, r31
     5e2:	fa e4       	ldi	r31, 0x4A	; 74
     5e4:	ef 2e       	mov	r14, r31
     5e6:	f1 e0       	ldi	r31, 0x01	; 1
     5e8:	ff 2e       	mov	r15, r31
     5ea:	f0 2d       	mov	r31, r0
     5ec:	e2 0e       	add	r14, r18
     5ee:	f3 1e       	adc	r15, r19
     5f0:	c0 d1       	rcall	.+896    	; 0x972 <__fixsfsi>
     5f2:	f7 01       	movw	r30, r14
     5f4:	71 83       	std	Z+1, r23	; 0x01
     5f6:	60 83       	st	Z, r22
     5f8:	d4 c0       	rjmp	.+424    	; 0x7a2 <main+0x49a>
		}
		
		else if(ADMUX == 0x27){ //gyro
     5fa:	88 81       	ld	r24, Y
     5fc:	87 32       	cpi	r24, 0x27	; 39
     5fe:	09 f0       	breq	.+2      	; 0x602 <main+0x2fa>
     600:	60 c0       	rjmp	.+192    	; 0x6c2 <main+0x3ba>
			vinkelv = (spanning)*150-370+0.859375;
     602:	20 e0       	ldi	r18, 0x00	; 0
     604:	30 e0       	ldi	r19, 0x00	; 0
     606:	46 e1       	ldi	r20, 0x16	; 22
     608:	53 e4       	ldi	r21, 0x43	; 67
     60a:	60 91 40 01 	lds	r22, 0x0140
     60e:	70 91 41 01 	lds	r23, 0x0141
     612:	80 91 42 01 	lds	r24, 0x0142
     616:	90 91 43 01 	lds	r25, 0x0143
     61a:	6a d2       	rcall	.+1236   	; 0xaf0 <__mulsf3>
     61c:	20 e0       	ldi	r18, 0x00	; 0
     61e:	30 e0       	ldi	r19, 0x00	; 0
     620:	49 eb       	ldi	r20, 0xB9	; 185
     622:	53 e4       	ldi	r21, 0x43	; 67
     624:	41 d1       	rcall	.+642    	; 0x8a8 <__subsf3>
     626:	20 e0       	ldi	r18, 0x00	; 0
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	4c e5       	ldi	r20, 0x5C	; 92
     62c:	5f e3       	ldi	r21, 0x3F	; 63
     62e:	3d d1       	rcall	.+634    	; 0x8aa <__addsf3>
     630:	c6 2e       	mov	r12, r22
     632:	d7 2e       	mov	r13, r23
     634:	e8 2e       	mov	r14, r24
     636:	f9 2e       	mov	r15, r25
     638:	98 2f       	mov	r25, r24
     63a:	4c 2d       	mov	r20, r12
     63c:	5d 2d       	mov	r21, r13
     63e:	69 2f       	mov	r22, r25
     640:	7f 2d       	mov	r23, r15
     642:	40 93 3b 01 	sts	0x013B, r20
     646:	50 93 3c 01 	sts	0x013C, r21
     64a:	60 93 3d 01 	sts	0x013D, r22
     64e:	70 93 3e 01 	sts	0x013E, r23
			sensordata[7] = sensordata[7] + vinkelv;
     652:	e8 e5       	ldi	r30, 0x58	; 88
     654:	f1 e0       	ldi	r31, 0x01	; 1
     656:	60 81       	ld	r22, Z
     658:	71 81       	ldd	r23, Z+1	; 0x01
     65a:	88 27       	eor	r24, r24
     65c:	77 fd       	sbrc	r23, 7
     65e:	80 95       	com	r24
     660:	98 2f       	mov	r25, r24
     662:	ba d1       	rcall	.+884    	; 0x9d8 <__floatsisf>
     664:	9b 01       	movw	r18, r22
     666:	ac 01       	movw	r20, r24
     668:	6c 2d       	mov	r22, r12
     66a:	7d 2d       	mov	r23, r13
     66c:	8e 2d       	mov	r24, r14
     66e:	9f 2d       	mov	r25, r15
     670:	1c d1       	rcall	.+568    	; 0x8aa <__addsf3>
     672:	7f d1       	rcall	.+766    	; 0x972 <__fixsfsi>
     674:	e8 e5       	ldi	r30, 0x58	; 88
     676:	f1 e0       	ldi	r31, 0x01	; 1
     678:	71 83       	std	Z+1, r23	; 0x01
     67a:	60 83       	st	Z, r22
			
			if ((sensordata[7] > konstant) or (sensordata[7] < -1*konstant)){ // mindre än 90 gradersvärdet
     67c:	cb 01       	movw	r24, r22
     67e:	aa 27       	eor	r26, r26
     680:	97 fd       	sbrc	r25, 7
     682:	a0 95       	com	r26
     684:	ba 2f       	mov	r27, r26
     686:	c0 90 00 01 	lds	r12, 0x0100
     68a:	d0 90 01 01 	lds	r13, 0x0101
     68e:	e0 90 02 01 	lds	r14, 0x0102
     692:	f0 90 03 01 	lds	r15, 0x0103
     696:	c8 16       	cp	r12, r24
     698:	d9 06       	cpc	r13, r25
     69a:	ea 06       	cpc	r14, r26
     69c:	fb 06       	cpc	r15, r27
     69e:	74 f0       	brlt	.+28     	; 0x6bc <main+0x3b4>
     6a0:	f0 94       	com	r15
     6a2:	e0 94       	com	r14
     6a4:	d0 94       	com	r13
     6a6:	c0 94       	com	r12
     6a8:	c1 1c       	adc	r12, r1
     6aa:	d1 1c       	adc	r13, r1
     6ac:	e1 1c       	adc	r14, r1
     6ae:	f1 1c       	adc	r15, r1
     6b0:	8c 15       	cp	r24, r12
     6b2:	9d 05       	cpc	r25, r13
     6b4:	ae 05       	cpc	r26, r14
     6b6:	bf 05       	cpc	r27, r15
     6b8:	0c f0       	brlt	.+2      	; 0x6bc <main+0x3b4>
     6ba:	73 c0       	rjmp	.+230    	; 0x7a2 <main+0x49a>
				gyromode = false;
     6bc:	10 92 3a 01 	sts	0x013A, r1
     6c0:	74 c0       	rjmp	.+232    	; 0x7aa <main+0x4a2>
				outDataArray[3] = '1';
				//skicka att 90grader är klar
				*/
			}
		}
		else if(ADMUX == 0x22 || 0x23 || 0x24 || 0x25){	//konvertering av A2-A5 (kortdistanssensorer)
     6c2:	88 81       	ld	r24, Y
			sensordata[savepos]	= round(12.5*pow(spanning,4)-100.7*pow(spanning,3)+291.4*pow(spanning,2)-367.2*spanning+189.6);
     6c4:	c0 90 40 01 	lds	r12, 0x0140
     6c8:	d0 90 41 01 	lds	r13, 0x0141
     6cc:	e0 90 42 01 	lds	r14, 0x0142
     6d0:	f0 90 43 01 	lds	r15, 0x0143
     6d4:	20 e0       	ldi	r18, 0x00	; 0
     6d6:	30 e0       	ldi	r19, 0x00	; 0
     6d8:	40 e8       	ldi	r20, 0x80	; 128
     6da:	50 e4       	ldi	r21, 0x40	; 64
     6dc:	c7 01       	movw	r24, r14
     6de:	b6 01       	movw	r22, r12
     6e0:	6a d2       	rcall	.+1236   	; 0xbb6 <pow>
     6e2:	46 2e       	mov	r4, r22
     6e4:	57 2e       	mov	r5, r23
     6e6:	68 2e       	mov	r6, r24
     6e8:	79 2e       	mov	r7, r25
     6ea:	20 e0       	ldi	r18, 0x00	; 0
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	40 e4       	ldi	r20, 0x40	; 64
     6f0:	50 e4       	ldi	r21, 0x40	; 64
     6f2:	c7 01       	movw	r24, r14
     6f4:	b6 01       	movw	r22, r12
     6f6:	5f d2       	rcall	.+1214   	; 0xbb6 <pow>
     6f8:	26 2e       	mov	r2, r22
     6fa:	37 2e       	mov	r3, r23
     6fc:	88 2e       	mov	r8, r24
     6fe:	99 2e       	mov	r9, r25
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	30 e0       	ldi	r19, 0x00	; 0
     704:	48 e4       	ldi	r20, 0x48	; 72
     706:	51 e4       	ldi	r21, 0x41	; 65
     708:	64 2d       	mov	r22, r4
     70a:	75 2d       	mov	r23, r5
     70c:	86 2d       	mov	r24, r6
     70e:	97 2d       	mov	r25, r7
     710:	ef d1       	rcall	.+990    	; 0xaf0 <__mulsf3>
     712:	2b 01       	movw	r4, r22
     714:	3c 01       	movw	r6, r24
     716:	26 e6       	ldi	r18, 0x66	; 102
     718:	36 e6       	ldi	r19, 0x66	; 102
     71a:	49 ec       	ldi	r20, 0xC9	; 201
     71c:	52 e4       	ldi	r21, 0x42	; 66
     71e:	62 2d       	mov	r22, r2
     720:	73 2d       	mov	r23, r3
     722:	88 2d       	mov	r24, r8
     724:	99 2d       	mov	r25, r9
     726:	e4 d1       	rcall	.+968    	; 0xaf0 <__mulsf3>
     728:	9b 01       	movw	r18, r22
     72a:	ac 01       	movw	r20, r24
     72c:	c3 01       	movw	r24, r6
     72e:	b2 01       	movw	r22, r4
     730:	bb d0       	rcall	.+374    	; 0x8a8 <__subsf3>
     732:	2b 01       	movw	r4, r22
     734:	3c 01       	movw	r6, r24
     736:	a7 01       	movw	r20, r14
     738:	96 01       	movw	r18, r12
     73a:	c7 01       	movw	r24, r14
     73c:	b6 01       	movw	r22, r12
     73e:	d8 d1       	rcall	.+944    	; 0xaf0 <__mulsf3>
     740:	23 e3       	ldi	r18, 0x33	; 51
     742:	33 eb       	ldi	r19, 0xB3	; 179
     744:	41 e9       	ldi	r20, 0x91	; 145
     746:	53 e4       	ldi	r21, 0x43	; 67
     748:	d3 d1       	rcall	.+934    	; 0xaf0 <__mulsf3>
     74a:	9b 01       	movw	r18, r22
     74c:	ac 01       	movw	r20, r24
     74e:	c3 01       	movw	r24, r6
     750:	b2 01       	movw	r22, r4
     752:	ab d0       	rcall	.+342    	; 0x8aa <__addsf3>
     754:	2b 01       	movw	r4, r22
     756:	3c 01       	movw	r6, r24
     758:	2a e9       	ldi	r18, 0x9A	; 154
     75a:	39 e9       	ldi	r19, 0x99	; 153
     75c:	47 eb       	ldi	r20, 0xB7	; 183
     75e:	53 e4       	ldi	r21, 0x43	; 67
     760:	c7 01       	movw	r24, r14
     762:	b6 01       	movw	r22, r12
     764:	c5 d1       	rcall	.+906    	; 0xaf0 <__mulsf3>
     766:	9b 01       	movw	r18, r22
     768:	ac 01       	movw	r20, r24
     76a:	c3 01       	movw	r24, r6
     76c:	b2 01       	movw	r22, r4
     76e:	9c d0       	rcall	.+312    	; 0x8a8 <__subsf3>
     770:	2a e9       	ldi	r18, 0x9A	; 154
     772:	39 e9       	ldi	r19, 0x99	; 153
     774:	4d e3       	ldi	r20, 0x3D	; 61
     776:	53 e4       	ldi	r21, 0x43	; 67
     778:	98 d0       	rcall	.+304    	; 0x8aa <__addsf3>
     77a:	69 d2       	rcall	.+1234   	; 0xc4e <round>
     77c:	e0 90 48 01 	lds	r14, 0x0148
     780:	f0 90 49 01 	lds	r15, 0x0149
     784:	97 01       	movw	r18, r14
     786:	22 0f       	add	r18, r18
     788:	33 1f       	adc	r19, r19
     78a:	0f 2e       	mov	r0, r31
     78c:	fa e4       	ldi	r31, 0x4A	; 74
     78e:	ef 2e       	mov	r14, r31
     790:	f1 e0       	ldi	r31, 0x01	; 1
     792:	ff 2e       	mov	r15, r31
     794:	f0 2d       	mov	r31, r0
     796:	e2 0e       	add	r14, r18
     798:	f3 1e       	adc	r15, r19
     79a:	eb d0       	rcall	.+470    	; 0x972 <__fixsfsi>
     79c:	f7 01       	movw	r30, r14
     79e:	71 83       	std	Z+1, r23	; 0x01
     7a0:	60 83       	st	Z, r22
		}
		
		if (gyromode){
     7a2:	80 91 3a 01 	lds	r24, 0x013A
     7a6:	81 11       	cpse	r24, r1
			ADMUX = 0x27;
     7a8:	b8 82       	st	Y, r11
		}
		
		if(ADMUX == 0x26 or (!gyromode and ADMUX == 0x27)){
     7aa:	88 81       	ld	r24, Y
     7ac:	86 32       	cpi	r24, 0x26	; 38
     7ae:	09 f4       	brne	.+2      	; 0x7b2 <main+0x4aa>
     7b0:	49 c0       	rjmp	.+146    	; 0x844 <main+0x53c>
     7b2:	80 91 3a 01 	lds	r24, 0x013A
     7b6:	81 11       	cpse	r24, r1
     7b8:	4b c0       	rjmp	.+150    	; 0x850 <main+0x548>
     7ba:	88 81       	ld	r24, Y
     7bc:	87 32       	cpi	r24, 0x27	; 39
     7be:	09 f0       	breq	.+2      	; 0x7c2 <main+0x4ba>
     7c0:	47 c0       	rjmp	.+142    	; 0x850 <main+0x548>
     7c2:	40 c0       	rjmp	.+128    	; 0x844 <main+0x53c>
			savepos = 0;
		}
		else if (ADMUX !=0x27)
		{
			
			sensormodul.outDataArray[0] = 5;
     7c4:	85 e0       	ldi	r24, 0x05	; 5
     7c6:	ef e1       	ldi	r30, 0x1F	; 31
     7c8:	f1 e0       	ldi	r31, 0x01	; 1
     7ca:	80 83       	st	Z, r24
			sensormodul.outDataArray[1] = 'a';
     7cc:	81 e6       	ldi	r24, 0x61	; 97
     7ce:	e0 e2       	ldi	r30, 0x20	; 32
     7d0:	f1 e0       	ldi	r31, 0x01	; 1
     7d2:	80 83       	st	Z, r24
			sensormodul.outDataArray[2] =  savepos + 48;
     7d4:	80 91 48 01 	lds	r24, 0x0148
     7d8:	90 91 49 01 	lds	r25, 0x0149
     7dc:	28 2f       	mov	r18, r24
     7de:	20 5d       	subi	r18, 0xD0	; 208
     7e0:	e1 e2       	ldi	r30, 0x21	; 33
     7e2:	f1 e0       	ldi	r31, 0x01	; 1
     7e4:	20 83       	st	Z, r18
			sensormodul.outDataArray[3] = (sensordata[savepos]/100) + 48; //plats 4
     7e6:	fc 01       	movw	r30, r24
     7e8:	ee 0f       	add	r30, r30
     7ea:	ff 1f       	adc	r31, r31
     7ec:	e6 5b       	subi	r30, 0xB6	; 182
     7ee:	fe 4f       	sbci	r31, 0xFE	; 254
     7f0:	20 81       	ld	r18, Z
     7f2:	31 81       	ldd	r19, Z+1	; 0x01
     7f4:	c9 01       	movw	r24, r18
     7f6:	64 e6       	ldi	r22, 0x64	; 100
     7f8:	70 e0       	ldi	r23, 0x00	; 0
     7fa:	e5 d3       	rcall	.+1994   	; 0xfc6 <__divmodhi4>
     7fc:	60 5d       	subi	r22, 0xD0	; 208
     7fe:	e2 e2       	ldi	r30, 0x22	; 34
     800:	f1 e0       	ldi	r31, 0x01	; 1
     802:	60 83       	st	Z, r22
			sensormodul.outDataArray[4] = ((sensordata[savepos]/10) %10) + 48; // plats 5
     804:	c9 01       	movw	r24, r18
     806:	b8 01       	movw	r22, r16
     808:	de d3       	rcall	.+1980   	; 0xfc6 <__divmodhi4>
     80a:	28 2f       	mov	r18, r24
     80c:	cb 01       	movw	r24, r22
     80e:	b8 01       	movw	r22, r16
     810:	da d3       	rcall	.+1972   	; 0xfc6 <__divmodhi4>
     812:	80 5d       	subi	r24, 0xD0	; 208
     814:	e3 e2       	ldi	r30, 0x23	; 35
     816:	f1 e0       	ldi	r31, 0x01	; 1
     818:	80 83       	st	Z, r24
			sensormodul.outDataArray[5] = (sensordata[savepos] % 10) + 48; // plats 6
     81a:	20 5d       	subi	r18, 0xD0	; 208
     81c:	20 93 24 01 	sts	0x0124, r18
				
			//ADMUX = ADMUX + 1;
			//savepos++;
		}
		
		if ((PIND==0x80)){
     820:	89 b1       	in	r24, 0x09	; 9
     822:	80 38       	cpi	r24, 0x80	; 128
     824:	49 f4       	brne	.+18     	; 0x838 <main+0x530>
			sensormodul.SPI_Send();
     826:	86 e0       	ldi	r24, 0x06	; 6
     828:	91 e0       	ldi	r25, 0x01	; 1
     82a:	36 d0       	rcall	.+108    	; 0x898 <_ZN5Slave8SPI_SendEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     82c:	8f ef       	ldi	r24, 0xFF	; 255
     82e:	97 e4       	ldi	r25, 0x47	; 71
     830:	01 97       	sbiw	r24, 0x01	; 1
     832:	f1 f7       	brne	.-4      	; 0x830 <main+0x528>
     834:	00 c0       	rjmp	.+0      	; 0x836 <main+0x52e>
     836:	00 00       	nop
			_delay_ms(5);
		}	
		ADCSRA |= 1<<ADSC;	// Start Conversion
     838:	ea e7       	ldi	r30, 0x7A	; 122
     83a:	f0 e0       	ldi	r31, 0x00	; 0
     83c:	80 81       	ld	r24, Z
     83e:	80 64       	ori	r24, 0x40	; 64
     840:	80 83       	st	Z, r24
							// data registers and select ADC0 as input channel
	
	sei();					// Enable Global Interrupts
	ADCSRA |= 1<<ADSC;		// Start Conversion
	
	while(1){				// Wait forever
     842:	7f cd       	rjmp	.-1282   	; 0x342 <main+0x3a>
		if (gyromode){
			ADMUX = 0x27;
		}
		
		if(ADMUX == 0x26 or (!gyromode and ADMUX == 0x27)){
			ADMUX = 0x20;
     844:	a8 82       	st	Y, r10
			savepos = 0;
     846:	10 92 49 01 	sts	0x0149, r1
     84a:	10 92 48 01 	sts	0x0148, r1
     84e:	e8 cf       	rjmp	.-48     	; 0x820 <main+0x518>
		}
		else if (ADMUX !=0x27)
     850:	88 81       	ld	r24, Y
     852:	87 32       	cpi	r24, 0x27	; 39
     854:	09 f0       	breq	.+2      	; 0x858 <main+0x550>
     856:	b6 cf       	rjmp	.-148    	; 0x7c4 <main+0x4bc>
     858:	e3 cf       	rjmp	.-58     	; 0x820 <main+0x518>

0000085a <_ZN5Slave8SPI_InitEv>:
#include "slave.h"

void Slave::SPI_Init()
{
	/* Set MISO output, all others input */
	DDRB = (1<<DDB6);
     85a:	20 e4       	ldi	r18, 0x40	; 64
     85c:	24 b9       	out	0x04, r18	; 4
	/* Enable SPI */
	SPCR = (1<<SPE)|(1<<SPIE)|(1<<SPR0);
     85e:	21 ec       	ldi	r18, 0xC1	; 193
     860:	2c bd       	out	0x2c, r18	; 44
	SPCR &= ~(1<<MSTR);
     862:	2c b5       	in	r18, 0x2c	; 44
     864:	2f 7e       	andi	r18, 0xEF	; 239
     866:	2c bd       	out	0x2c, r18	; 44
	
	//PORTB |= (1<<PORTB4); //Enable pull-up resistor
	
	//dummy läsning för att rensa registret
	SPDR=0x00;
     868:	1e bc       	out	0x2e, r1	; 46
	
	
	EIMSK |= (1<<INT0);
     86a:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA |= (1<<ISC01)|(1<<ISC00);
     86c:	e9 e6       	ldi	r30, 0x69	; 105
     86e:	f0 e0       	ldi	r31, 0x00	; 0
     870:	20 81       	ld	r18, Z
     872:	23 60       	ori	r18, 0x03	; 3
     874:	20 83       	st	Z, r18
	
	DDRB |= (1<<DDB2);
     876:	22 9a       	sbi	0x04, 2	; 4
	
	DDRD &= ~(1<<DDD7);
     878:	57 98       	cbi	0x0a, 7	; 10
	
	//sets interupt on pcint16
	PCMSK2 |= (1<<PCINT16);
     87a:	ed e6       	ldi	r30, 0x6D	; 109
     87c:	f0 e0       	ldi	r31, 0x00	; 0
     87e:	20 81       	ld	r18, Z
     880:	21 60       	ori	r18, 0x01	; 1
     882:	20 83       	st	Z, r18
	PCICR |= (1<<PCIE2);	
     884:	e8 e6       	ldi	r30, 0x68	; 104
     886:	f0 e0       	ldi	r31, 0x00	; 0
     888:	20 81       	ld	r18, Z
     88a:	24 60       	ori	r18, 0x04	; 4
     88c:	20 83       	st	Z, r18
	DDRC |= (1<<DDC0);
     88e:	38 9a       	sbi	0x07, 0	; 7
	
	position = 0;
     890:	fc 01       	movw	r30, r24
     892:	13 aa       	std	Z+51, r1	; 0x33
     894:	12 aa       	std	Z+50, r1	; 0x32
     896:	08 95       	ret

00000898 <_ZN5Slave8SPI_SendEv>:
	return;
}

void Slave::SPI_Send(){
	position=0;
     898:	fc 01       	movw	r30, r24
     89a:	13 aa       	std	Z+51, r1	; 0x33
     89c:	12 aa       	std	Z+50, r1	; 0x32
	SPDR = outDataArray[0];
     89e:	81 8d       	ldd	r24, Z+25	; 0x19
     8a0:	8e bd       	out	0x2e, r24	; 46
	PORTB |= (1<<PORTB2);	//interrupt to master
     8a2:	2a 9a       	sbi	0x05, 2	; 5
	PORTB &= ~(1<<PORTB2);	//clear interrupt to master
     8a4:	2a 98       	cbi	0x05, 2	; 5
     8a6:	08 95       	ret

000008a8 <__subsf3>:
     8a8:	50 58       	subi	r21, 0x80	; 128

000008aa <__addsf3>:
     8aa:	bb 27       	eor	r27, r27
     8ac:	aa 27       	eor	r26, r26
     8ae:	0e d0       	rcall	.+28     	; 0x8cc <__addsf3x>
     8b0:	e5 c0       	rjmp	.+458    	; 0xa7c <__fp_round>
     8b2:	d6 d0       	rcall	.+428    	; 0xa60 <__fp_pscA>
     8b4:	30 f0       	brcs	.+12     	; 0x8c2 <__addsf3+0x18>
     8b6:	db d0       	rcall	.+438    	; 0xa6e <__fp_pscB>
     8b8:	20 f0       	brcs	.+8      	; 0x8c2 <__addsf3+0x18>
     8ba:	31 f4       	brne	.+12     	; 0x8c8 <__addsf3+0x1e>
     8bc:	9f 3f       	cpi	r25, 0xFF	; 255
     8be:	11 f4       	brne	.+4      	; 0x8c4 <__addsf3+0x1a>
     8c0:	1e f4       	brtc	.+6      	; 0x8c8 <__addsf3+0x1e>
     8c2:	cb c0       	rjmp	.+406    	; 0xa5a <__fp_nan>
     8c4:	0e f4       	brtc	.+2      	; 0x8c8 <__addsf3+0x1e>
     8c6:	e0 95       	com	r30
     8c8:	e7 fb       	bst	r30, 7
     8ca:	c1 c0       	rjmp	.+386    	; 0xa4e <__fp_inf>

000008cc <__addsf3x>:
     8cc:	e9 2f       	mov	r30, r25
     8ce:	e7 d0       	rcall	.+462    	; 0xa9e <__fp_split3>
     8d0:	80 f3       	brcs	.-32     	; 0x8b2 <__addsf3+0x8>
     8d2:	ba 17       	cp	r27, r26
     8d4:	62 07       	cpc	r22, r18
     8d6:	73 07       	cpc	r23, r19
     8d8:	84 07       	cpc	r24, r20
     8da:	95 07       	cpc	r25, r21
     8dc:	18 f0       	brcs	.+6      	; 0x8e4 <__addsf3x+0x18>
     8de:	71 f4       	brne	.+28     	; 0x8fc <__addsf3x+0x30>
     8e0:	9e f5       	brtc	.+102    	; 0x948 <__addsf3x+0x7c>
     8e2:	ff c0       	rjmp	.+510    	; 0xae2 <__fp_zero>
     8e4:	0e f4       	brtc	.+2      	; 0x8e8 <__addsf3x+0x1c>
     8e6:	e0 95       	com	r30
     8e8:	0b 2e       	mov	r0, r27
     8ea:	ba 2f       	mov	r27, r26
     8ec:	a0 2d       	mov	r26, r0
     8ee:	0b 01       	movw	r0, r22
     8f0:	b9 01       	movw	r22, r18
     8f2:	90 01       	movw	r18, r0
     8f4:	0c 01       	movw	r0, r24
     8f6:	ca 01       	movw	r24, r20
     8f8:	a0 01       	movw	r20, r0
     8fa:	11 24       	eor	r1, r1
     8fc:	ff 27       	eor	r31, r31
     8fe:	59 1b       	sub	r21, r25
     900:	99 f0       	breq	.+38     	; 0x928 <__addsf3x+0x5c>
     902:	59 3f       	cpi	r21, 0xF9	; 249
     904:	50 f4       	brcc	.+20     	; 0x91a <__addsf3x+0x4e>
     906:	50 3e       	cpi	r21, 0xE0	; 224
     908:	68 f1       	brcs	.+90     	; 0x964 <__addsf3x+0x98>
     90a:	1a 16       	cp	r1, r26
     90c:	f0 40       	sbci	r31, 0x00	; 0
     90e:	a2 2f       	mov	r26, r18
     910:	23 2f       	mov	r18, r19
     912:	34 2f       	mov	r19, r20
     914:	44 27       	eor	r20, r20
     916:	58 5f       	subi	r21, 0xF8	; 248
     918:	f3 cf       	rjmp	.-26     	; 0x900 <__addsf3x+0x34>
     91a:	46 95       	lsr	r20
     91c:	37 95       	ror	r19
     91e:	27 95       	ror	r18
     920:	a7 95       	ror	r26
     922:	f0 40       	sbci	r31, 0x00	; 0
     924:	53 95       	inc	r21
     926:	c9 f7       	brne	.-14     	; 0x91a <__addsf3x+0x4e>
     928:	7e f4       	brtc	.+30     	; 0x948 <__addsf3x+0x7c>
     92a:	1f 16       	cp	r1, r31
     92c:	ba 0b       	sbc	r27, r26
     92e:	62 0b       	sbc	r22, r18
     930:	73 0b       	sbc	r23, r19
     932:	84 0b       	sbc	r24, r20
     934:	ba f0       	brmi	.+46     	; 0x964 <__addsf3x+0x98>
     936:	91 50       	subi	r25, 0x01	; 1
     938:	a1 f0       	breq	.+40     	; 0x962 <__addsf3x+0x96>
     93a:	ff 0f       	add	r31, r31
     93c:	bb 1f       	adc	r27, r27
     93e:	66 1f       	adc	r22, r22
     940:	77 1f       	adc	r23, r23
     942:	88 1f       	adc	r24, r24
     944:	c2 f7       	brpl	.-16     	; 0x936 <__addsf3x+0x6a>
     946:	0e c0       	rjmp	.+28     	; 0x964 <__addsf3x+0x98>
     948:	ba 0f       	add	r27, r26
     94a:	62 1f       	adc	r22, r18
     94c:	73 1f       	adc	r23, r19
     94e:	84 1f       	adc	r24, r20
     950:	48 f4       	brcc	.+18     	; 0x964 <__addsf3x+0x98>
     952:	87 95       	ror	r24
     954:	77 95       	ror	r23
     956:	67 95       	ror	r22
     958:	b7 95       	ror	r27
     95a:	f7 95       	ror	r31
     95c:	9e 3f       	cpi	r25, 0xFE	; 254
     95e:	08 f0       	brcs	.+2      	; 0x962 <__addsf3x+0x96>
     960:	b3 cf       	rjmp	.-154    	; 0x8c8 <__addsf3+0x1e>
     962:	93 95       	inc	r25
     964:	88 0f       	add	r24, r24
     966:	08 f0       	brcs	.+2      	; 0x96a <__addsf3x+0x9e>
     968:	99 27       	eor	r25, r25
     96a:	ee 0f       	add	r30, r30
     96c:	97 95       	ror	r25
     96e:	87 95       	ror	r24
     970:	08 95       	ret

00000972 <__fixsfsi>:
     972:	04 d0       	rcall	.+8      	; 0x97c <__fixunssfsi>
     974:	68 94       	set
     976:	b1 11       	cpse	r27, r1
     978:	b5 c0       	rjmp	.+362    	; 0xae4 <__fp_szero>
     97a:	08 95       	ret

0000097c <__fixunssfsi>:
     97c:	98 d0       	rcall	.+304    	; 0xaae <__fp_splitA>
     97e:	88 f0       	brcs	.+34     	; 0x9a2 <__fixunssfsi+0x26>
     980:	9f 57       	subi	r25, 0x7F	; 127
     982:	90 f0       	brcs	.+36     	; 0x9a8 <__fixunssfsi+0x2c>
     984:	b9 2f       	mov	r27, r25
     986:	99 27       	eor	r25, r25
     988:	b7 51       	subi	r27, 0x17	; 23
     98a:	a0 f0       	brcs	.+40     	; 0x9b4 <__fixunssfsi+0x38>
     98c:	d1 f0       	breq	.+52     	; 0x9c2 <__fixunssfsi+0x46>
     98e:	66 0f       	add	r22, r22
     990:	77 1f       	adc	r23, r23
     992:	88 1f       	adc	r24, r24
     994:	99 1f       	adc	r25, r25
     996:	1a f0       	brmi	.+6      	; 0x99e <__fixunssfsi+0x22>
     998:	ba 95       	dec	r27
     99a:	c9 f7       	brne	.-14     	; 0x98e <__fixunssfsi+0x12>
     99c:	12 c0       	rjmp	.+36     	; 0x9c2 <__fixunssfsi+0x46>
     99e:	b1 30       	cpi	r27, 0x01	; 1
     9a0:	81 f0       	breq	.+32     	; 0x9c2 <__fixunssfsi+0x46>
     9a2:	9f d0       	rcall	.+318    	; 0xae2 <__fp_zero>
     9a4:	b1 e0       	ldi	r27, 0x01	; 1
     9a6:	08 95       	ret
     9a8:	9c c0       	rjmp	.+312    	; 0xae2 <__fp_zero>
     9aa:	67 2f       	mov	r22, r23
     9ac:	78 2f       	mov	r23, r24
     9ae:	88 27       	eor	r24, r24
     9b0:	b8 5f       	subi	r27, 0xF8	; 248
     9b2:	39 f0       	breq	.+14     	; 0x9c2 <__fixunssfsi+0x46>
     9b4:	b9 3f       	cpi	r27, 0xF9	; 249
     9b6:	cc f3       	brlt	.-14     	; 0x9aa <__fixunssfsi+0x2e>
     9b8:	86 95       	lsr	r24
     9ba:	77 95       	ror	r23
     9bc:	67 95       	ror	r22
     9be:	b3 95       	inc	r27
     9c0:	d9 f7       	brne	.-10     	; 0x9b8 <__fixunssfsi+0x3c>
     9c2:	3e f4       	brtc	.+14     	; 0x9d2 <__fixunssfsi+0x56>
     9c4:	90 95       	com	r25
     9c6:	80 95       	com	r24
     9c8:	70 95       	com	r23
     9ca:	61 95       	neg	r22
     9cc:	7f 4f       	sbci	r23, 0xFF	; 255
     9ce:	8f 4f       	sbci	r24, 0xFF	; 255
     9d0:	9f 4f       	sbci	r25, 0xFF	; 255
     9d2:	08 95       	ret

000009d4 <__floatunsisf>:
     9d4:	e8 94       	clt
     9d6:	09 c0       	rjmp	.+18     	; 0x9ea <__floatsisf+0x12>

000009d8 <__floatsisf>:
     9d8:	97 fb       	bst	r25, 7
     9da:	3e f4       	brtc	.+14     	; 0x9ea <__floatsisf+0x12>
     9dc:	90 95       	com	r25
     9de:	80 95       	com	r24
     9e0:	70 95       	com	r23
     9e2:	61 95       	neg	r22
     9e4:	7f 4f       	sbci	r23, 0xFF	; 255
     9e6:	8f 4f       	sbci	r24, 0xFF	; 255
     9e8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ea:	99 23       	and	r25, r25
     9ec:	a9 f0       	breq	.+42     	; 0xa18 <__floatsisf+0x40>
     9ee:	f9 2f       	mov	r31, r25
     9f0:	96 e9       	ldi	r25, 0x96	; 150
     9f2:	bb 27       	eor	r27, r27
     9f4:	93 95       	inc	r25
     9f6:	f6 95       	lsr	r31
     9f8:	87 95       	ror	r24
     9fa:	77 95       	ror	r23
     9fc:	67 95       	ror	r22
     9fe:	b7 95       	ror	r27
     a00:	f1 11       	cpse	r31, r1
     a02:	f8 cf       	rjmp	.-16     	; 0x9f4 <__floatsisf+0x1c>
     a04:	fa f4       	brpl	.+62     	; 0xa44 <__floatsisf+0x6c>
     a06:	bb 0f       	add	r27, r27
     a08:	11 f4       	brne	.+4      	; 0xa0e <__floatsisf+0x36>
     a0a:	60 ff       	sbrs	r22, 0
     a0c:	1b c0       	rjmp	.+54     	; 0xa44 <__floatsisf+0x6c>
     a0e:	6f 5f       	subi	r22, 0xFF	; 255
     a10:	7f 4f       	sbci	r23, 0xFF	; 255
     a12:	8f 4f       	sbci	r24, 0xFF	; 255
     a14:	9f 4f       	sbci	r25, 0xFF	; 255
     a16:	16 c0       	rjmp	.+44     	; 0xa44 <__floatsisf+0x6c>
     a18:	88 23       	and	r24, r24
     a1a:	11 f0       	breq	.+4      	; 0xa20 <__floatsisf+0x48>
     a1c:	96 e9       	ldi	r25, 0x96	; 150
     a1e:	11 c0       	rjmp	.+34     	; 0xa42 <__floatsisf+0x6a>
     a20:	77 23       	and	r23, r23
     a22:	21 f0       	breq	.+8      	; 0xa2c <__floatsisf+0x54>
     a24:	9e e8       	ldi	r25, 0x8E	; 142
     a26:	87 2f       	mov	r24, r23
     a28:	76 2f       	mov	r23, r22
     a2a:	05 c0       	rjmp	.+10     	; 0xa36 <__floatsisf+0x5e>
     a2c:	66 23       	and	r22, r22
     a2e:	71 f0       	breq	.+28     	; 0xa4c <__floatsisf+0x74>
     a30:	96 e8       	ldi	r25, 0x86	; 134
     a32:	86 2f       	mov	r24, r22
     a34:	70 e0       	ldi	r23, 0x00	; 0
     a36:	60 e0       	ldi	r22, 0x00	; 0
     a38:	2a f0       	brmi	.+10     	; 0xa44 <__floatsisf+0x6c>
     a3a:	9a 95       	dec	r25
     a3c:	66 0f       	add	r22, r22
     a3e:	77 1f       	adc	r23, r23
     a40:	88 1f       	adc	r24, r24
     a42:	da f7       	brpl	.-10     	; 0xa3a <__floatsisf+0x62>
     a44:	88 0f       	add	r24, r24
     a46:	96 95       	lsr	r25
     a48:	87 95       	ror	r24
     a4a:	97 f9       	bld	r25, 7
     a4c:	08 95       	ret

00000a4e <__fp_inf>:
     a4e:	97 f9       	bld	r25, 7
     a50:	9f 67       	ori	r25, 0x7F	; 127
     a52:	80 e8       	ldi	r24, 0x80	; 128
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	60 e0       	ldi	r22, 0x00	; 0
     a58:	08 95       	ret

00000a5a <__fp_nan>:
     a5a:	9f ef       	ldi	r25, 0xFF	; 255
     a5c:	80 ec       	ldi	r24, 0xC0	; 192
     a5e:	08 95       	ret

00000a60 <__fp_pscA>:
     a60:	00 24       	eor	r0, r0
     a62:	0a 94       	dec	r0
     a64:	16 16       	cp	r1, r22
     a66:	17 06       	cpc	r1, r23
     a68:	18 06       	cpc	r1, r24
     a6a:	09 06       	cpc	r0, r25
     a6c:	08 95       	ret

00000a6e <__fp_pscB>:
     a6e:	00 24       	eor	r0, r0
     a70:	0a 94       	dec	r0
     a72:	12 16       	cp	r1, r18
     a74:	13 06       	cpc	r1, r19
     a76:	14 06       	cpc	r1, r20
     a78:	05 06       	cpc	r0, r21
     a7a:	08 95       	ret

00000a7c <__fp_round>:
     a7c:	09 2e       	mov	r0, r25
     a7e:	03 94       	inc	r0
     a80:	00 0c       	add	r0, r0
     a82:	11 f4       	brne	.+4      	; 0xa88 <__fp_round+0xc>
     a84:	88 23       	and	r24, r24
     a86:	52 f0       	brmi	.+20     	; 0xa9c <__fp_round+0x20>
     a88:	bb 0f       	add	r27, r27
     a8a:	40 f4       	brcc	.+16     	; 0xa9c <__fp_round+0x20>
     a8c:	bf 2b       	or	r27, r31
     a8e:	11 f4       	brne	.+4      	; 0xa94 <__fp_round+0x18>
     a90:	60 ff       	sbrs	r22, 0
     a92:	04 c0       	rjmp	.+8      	; 0xa9c <__fp_round+0x20>
     a94:	6f 5f       	subi	r22, 0xFF	; 255
     a96:	7f 4f       	sbci	r23, 0xFF	; 255
     a98:	8f 4f       	sbci	r24, 0xFF	; 255
     a9a:	9f 4f       	sbci	r25, 0xFF	; 255
     a9c:	08 95       	ret

00000a9e <__fp_split3>:
     a9e:	57 fd       	sbrc	r21, 7
     aa0:	90 58       	subi	r25, 0x80	; 128
     aa2:	44 0f       	add	r20, r20
     aa4:	55 1f       	adc	r21, r21
     aa6:	59 f0       	breq	.+22     	; 0xabe <__fp_splitA+0x10>
     aa8:	5f 3f       	cpi	r21, 0xFF	; 255
     aaa:	71 f0       	breq	.+28     	; 0xac8 <__fp_splitA+0x1a>
     aac:	47 95       	ror	r20

00000aae <__fp_splitA>:
     aae:	88 0f       	add	r24, r24
     ab0:	97 fb       	bst	r25, 7
     ab2:	99 1f       	adc	r25, r25
     ab4:	61 f0       	breq	.+24     	; 0xace <__fp_splitA+0x20>
     ab6:	9f 3f       	cpi	r25, 0xFF	; 255
     ab8:	79 f0       	breq	.+30     	; 0xad8 <__fp_splitA+0x2a>
     aba:	87 95       	ror	r24
     abc:	08 95       	ret
     abe:	12 16       	cp	r1, r18
     ac0:	13 06       	cpc	r1, r19
     ac2:	14 06       	cpc	r1, r20
     ac4:	55 1f       	adc	r21, r21
     ac6:	f2 cf       	rjmp	.-28     	; 0xaac <__fp_split3+0xe>
     ac8:	46 95       	lsr	r20
     aca:	f1 df       	rcall	.-30     	; 0xaae <__fp_splitA>
     acc:	08 c0       	rjmp	.+16     	; 0xade <__fp_splitA+0x30>
     ace:	16 16       	cp	r1, r22
     ad0:	17 06       	cpc	r1, r23
     ad2:	18 06       	cpc	r1, r24
     ad4:	99 1f       	adc	r25, r25
     ad6:	f1 cf       	rjmp	.-30     	; 0xaba <__fp_splitA+0xc>
     ad8:	86 95       	lsr	r24
     ada:	71 05       	cpc	r23, r1
     adc:	61 05       	cpc	r22, r1
     ade:	08 94       	sec
     ae0:	08 95       	ret

00000ae2 <__fp_zero>:
     ae2:	e8 94       	clt

00000ae4 <__fp_szero>:
     ae4:	bb 27       	eor	r27, r27
     ae6:	66 27       	eor	r22, r22
     ae8:	77 27       	eor	r23, r23
     aea:	cb 01       	movw	r24, r22
     aec:	97 f9       	bld	r25, 7
     aee:	08 95       	ret

00000af0 <__mulsf3>:
     af0:	0b d0       	rcall	.+22     	; 0xb08 <__mulsf3x>
     af2:	c4 cf       	rjmp	.-120    	; 0xa7c <__fp_round>
     af4:	b5 df       	rcall	.-150    	; 0xa60 <__fp_pscA>
     af6:	28 f0       	brcs	.+10     	; 0xb02 <__mulsf3+0x12>
     af8:	ba df       	rcall	.-140    	; 0xa6e <__fp_pscB>
     afa:	18 f0       	brcs	.+6      	; 0xb02 <__mulsf3+0x12>
     afc:	95 23       	and	r25, r21
     afe:	09 f0       	breq	.+2      	; 0xb02 <__mulsf3+0x12>
     b00:	a6 cf       	rjmp	.-180    	; 0xa4e <__fp_inf>
     b02:	ab cf       	rjmp	.-170    	; 0xa5a <__fp_nan>
     b04:	11 24       	eor	r1, r1
     b06:	ee cf       	rjmp	.-36     	; 0xae4 <__fp_szero>

00000b08 <__mulsf3x>:
     b08:	ca df       	rcall	.-108    	; 0xa9e <__fp_split3>
     b0a:	a0 f3       	brcs	.-24     	; 0xaf4 <__mulsf3+0x4>

00000b0c <__mulsf3_pse>:
     b0c:	95 9f       	mul	r25, r21
     b0e:	d1 f3       	breq	.-12     	; 0xb04 <__mulsf3+0x14>
     b10:	95 0f       	add	r25, r21
     b12:	50 e0       	ldi	r21, 0x00	; 0
     b14:	55 1f       	adc	r21, r21
     b16:	62 9f       	mul	r22, r18
     b18:	f0 01       	movw	r30, r0
     b1a:	72 9f       	mul	r23, r18
     b1c:	bb 27       	eor	r27, r27
     b1e:	f0 0d       	add	r31, r0
     b20:	b1 1d       	adc	r27, r1
     b22:	63 9f       	mul	r22, r19
     b24:	aa 27       	eor	r26, r26
     b26:	f0 0d       	add	r31, r0
     b28:	b1 1d       	adc	r27, r1
     b2a:	aa 1f       	adc	r26, r26
     b2c:	64 9f       	mul	r22, r20
     b2e:	66 27       	eor	r22, r22
     b30:	b0 0d       	add	r27, r0
     b32:	a1 1d       	adc	r26, r1
     b34:	66 1f       	adc	r22, r22
     b36:	82 9f       	mul	r24, r18
     b38:	22 27       	eor	r18, r18
     b3a:	b0 0d       	add	r27, r0
     b3c:	a1 1d       	adc	r26, r1
     b3e:	62 1f       	adc	r22, r18
     b40:	73 9f       	mul	r23, r19
     b42:	b0 0d       	add	r27, r0
     b44:	a1 1d       	adc	r26, r1
     b46:	62 1f       	adc	r22, r18
     b48:	83 9f       	mul	r24, r19
     b4a:	a0 0d       	add	r26, r0
     b4c:	61 1d       	adc	r22, r1
     b4e:	22 1f       	adc	r18, r18
     b50:	74 9f       	mul	r23, r20
     b52:	33 27       	eor	r19, r19
     b54:	a0 0d       	add	r26, r0
     b56:	61 1d       	adc	r22, r1
     b58:	23 1f       	adc	r18, r19
     b5a:	84 9f       	mul	r24, r20
     b5c:	60 0d       	add	r22, r0
     b5e:	21 1d       	adc	r18, r1
     b60:	82 2f       	mov	r24, r18
     b62:	76 2f       	mov	r23, r22
     b64:	6a 2f       	mov	r22, r26
     b66:	11 24       	eor	r1, r1
     b68:	9f 57       	subi	r25, 0x7F	; 127
     b6a:	50 40       	sbci	r21, 0x00	; 0
     b6c:	8a f0       	brmi	.+34     	; 0xb90 <__mulsf3_pse+0x84>
     b6e:	e1 f0       	breq	.+56     	; 0xba8 <__mulsf3_pse+0x9c>
     b70:	88 23       	and	r24, r24
     b72:	4a f0       	brmi	.+18     	; 0xb86 <__mulsf3_pse+0x7a>
     b74:	ee 0f       	add	r30, r30
     b76:	ff 1f       	adc	r31, r31
     b78:	bb 1f       	adc	r27, r27
     b7a:	66 1f       	adc	r22, r22
     b7c:	77 1f       	adc	r23, r23
     b7e:	88 1f       	adc	r24, r24
     b80:	91 50       	subi	r25, 0x01	; 1
     b82:	50 40       	sbci	r21, 0x00	; 0
     b84:	a9 f7       	brne	.-22     	; 0xb70 <__mulsf3_pse+0x64>
     b86:	9e 3f       	cpi	r25, 0xFE	; 254
     b88:	51 05       	cpc	r21, r1
     b8a:	70 f0       	brcs	.+28     	; 0xba8 <__mulsf3_pse+0x9c>
     b8c:	60 cf       	rjmp	.-320    	; 0xa4e <__fp_inf>
     b8e:	aa cf       	rjmp	.-172    	; 0xae4 <__fp_szero>
     b90:	5f 3f       	cpi	r21, 0xFF	; 255
     b92:	ec f3       	brlt	.-6      	; 0xb8e <__mulsf3_pse+0x82>
     b94:	98 3e       	cpi	r25, 0xE8	; 232
     b96:	dc f3       	brlt	.-10     	; 0xb8e <__mulsf3_pse+0x82>
     b98:	86 95       	lsr	r24
     b9a:	77 95       	ror	r23
     b9c:	67 95       	ror	r22
     b9e:	b7 95       	ror	r27
     ba0:	f7 95       	ror	r31
     ba2:	e7 95       	ror	r30
     ba4:	9f 5f       	subi	r25, 0xFF	; 255
     ba6:	c1 f7       	brne	.-16     	; 0xb98 <__mulsf3_pse+0x8c>
     ba8:	fe 2b       	or	r31, r30
     baa:	88 0f       	add	r24, r24
     bac:	91 1d       	adc	r25, r1
     bae:	96 95       	lsr	r25
     bb0:	87 95       	ror	r24
     bb2:	97 f9       	bld	r25, 7
     bb4:	08 95       	ret

00000bb6 <pow>:
     bb6:	fa 01       	movw	r30, r20
     bb8:	ee 0f       	add	r30, r30
     bba:	ff 1f       	adc	r31, r31
     bbc:	30 96       	adiw	r30, 0x00	; 0
     bbe:	21 05       	cpc	r18, r1
     bc0:	31 05       	cpc	r19, r1
     bc2:	99 f1       	breq	.+102    	; 0xc2a <pow+0x74>
     bc4:	61 15       	cp	r22, r1
     bc6:	71 05       	cpc	r23, r1
     bc8:	61 f4       	brne	.+24     	; 0xbe2 <pow+0x2c>
     bca:	80 38       	cpi	r24, 0x80	; 128
     bcc:	bf e3       	ldi	r27, 0x3F	; 63
     bce:	9b 07       	cpc	r25, r27
     bd0:	49 f1       	breq	.+82     	; 0xc24 <pow+0x6e>
     bd2:	68 94       	set
     bd4:	90 38       	cpi	r25, 0x80	; 128
     bd6:	81 05       	cpc	r24, r1
     bd8:	61 f0       	breq	.+24     	; 0xbf2 <pow+0x3c>
     bda:	80 38       	cpi	r24, 0x80	; 128
     bdc:	bf ef       	ldi	r27, 0xFF	; 255
     bde:	9b 07       	cpc	r25, r27
     be0:	41 f0       	breq	.+16     	; 0xbf2 <pow+0x3c>
     be2:	99 23       	and	r25, r25
     be4:	42 f5       	brpl	.+80     	; 0xc36 <pow+0x80>
     be6:	ff 3f       	cpi	r31, 0xFF	; 255
     be8:	e1 05       	cpc	r30, r1
     bea:	31 05       	cpc	r19, r1
     bec:	21 05       	cpc	r18, r1
     bee:	11 f1       	breq	.+68     	; 0xc34 <pow+0x7e>
     bf0:	e8 94       	clt
     bf2:	08 94       	sec
     bf4:	e7 95       	ror	r30
     bf6:	d9 01       	movw	r26, r18
     bf8:	aa 23       	and	r26, r26
     bfa:	29 f4       	brne	.+10     	; 0xc06 <pow+0x50>
     bfc:	ab 2f       	mov	r26, r27
     bfe:	be 2f       	mov	r27, r30
     c00:	f8 5f       	subi	r31, 0xF8	; 248
     c02:	d0 f3       	brcs	.-12     	; 0xbf8 <pow+0x42>
     c04:	10 c0       	rjmp	.+32     	; 0xc26 <pow+0x70>
     c06:	ff 5f       	subi	r31, 0xFF	; 255
     c08:	70 f4       	brcc	.+28     	; 0xc26 <pow+0x70>
     c0a:	a6 95       	lsr	r26
     c0c:	e0 f7       	brcc	.-8      	; 0xc06 <pow+0x50>
     c0e:	f7 39       	cpi	r31, 0x97	; 151
     c10:	50 f0       	brcs	.+20     	; 0xc26 <pow+0x70>
     c12:	19 f0       	breq	.+6      	; 0xc1a <pow+0x64>
     c14:	ff 3a       	cpi	r31, 0xAF	; 175
     c16:	38 f4       	brcc	.+14     	; 0xc26 <pow+0x70>
     c18:	9f 77       	andi	r25, 0x7F	; 127
     c1a:	9f 93       	push	r25
     c1c:	0c d0       	rcall	.+24     	; 0xc36 <pow+0x80>
     c1e:	0f 90       	pop	r0
     c20:	07 fc       	sbrc	r0, 7
     c22:	90 58       	subi	r25, 0x80	; 128
     c24:	08 95       	ret
     c26:	3e f0       	brts	.+14     	; 0xc36 <pow+0x80>
     c28:	18 cf       	rjmp	.-464    	; 0xa5a <__fp_nan>
     c2a:	60 e0       	ldi	r22, 0x00	; 0
     c2c:	70 e0       	ldi	r23, 0x00	; 0
     c2e:	80 e8       	ldi	r24, 0x80	; 128
     c30:	9f e3       	ldi	r25, 0x3F	; 63
     c32:	08 95       	ret
     c34:	4f e7       	ldi	r20, 0x7F	; 127
     c36:	9f 77       	andi	r25, 0x7F	; 127
     c38:	5f 93       	push	r21
     c3a:	4f 93       	push	r20
     c3c:	3f 93       	push	r19
     c3e:	2f 93       	push	r18
     c40:	e7 d0       	rcall	.+462    	; 0xe10 <log>
     c42:	2f 91       	pop	r18
     c44:	3f 91       	pop	r19
     c46:	4f 91       	pop	r20
     c48:	5f 91       	pop	r21
     c4a:	52 df       	rcall	.-348    	; 0xaf0 <__mulsf3>
     c4c:	25 c0       	rjmp	.+74     	; 0xc98 <exp>

00000c4e <round>:
     c4e:	2f df       	rcall	.-418    	; 0xaae <__fp_splitA>
     c50:	e0 f0       	brcs	.+56     	; 0xc8a <round+0x3c>
     c52:	9e 37       	cpi	r25, 0x7E	; 126
     c54:	d8 f0       	brcs	.+54     	; 0xc8c <round+0x3e>
     c56:	96 39       	cpi	r25, 0x96	; 150
     c58:	b8 f4       	brcc	.+46     	; 0xc88 <round+0x3a>
     c5a:	9e 38       	cpi	r25, 0x8E	; 142
     c5c:	48 f4       	brcc	.+18     	; 0xc70 <round+0x22>
     c5e:	67 2f       	mov	r22, r23
     c60:	78 2f       	mov	r23, r24
     c62:	88 27       	eor	r24, r24
     c64:	98 5f       	subi	r25, 0xF8	; 248
     c66:	f9 cf       	rjmp	.-14     	; 0xc5a <round+0xc>
     c68:	86 95       	lsr	r24
     c6a:	77 95       	ror	r23
     c6c:	67 95       	ror	r22
     c6e:	93 95       	inc	r25
     c70:	95 39       	cpi	r25, 0x95	; 149
     c72:	d0 f3       	brcs	.-12     	; 0xc68 <round+0x1a>
     c74:	b6 2f       	mov	r27, r22
     c76:	b1 70       	andi	r27, 0x01	; 1
     c78:	6b 0f       	add	r22, r27
     c7a:	71 1d       	adc	r23, r1
     c7c:	81 1d       	adc	r24, r1
     c7e:	20 f4       	brcc	.+8      	; 0xc88 <round+0x3a>
     c80:	87 95       	ror	r24
     c82:	77 95       	ror	r23
     c84:	67 95       	ror	r22
     c86:	93 95       	inc	r25
     c88:	33 c0       	rjmp	.+102    	; 0xcf0 <__fp_mintl>
     c8a:	4d c0       	rjmp	.+154    	; 0xd26 <__fp_mpack>
     c8c:	2b cf       	rjmp	.-426    	; 0xae4 <__fp_szero>
     c8e:	19 f4       	brne	.+6      	; 0xc96 <round+0x48>
     c90:	0e f0       	brts	.+2      	; 0xc94 <round+0x46>
     c92:	dd ce       	rjmp	.-582    	; 0xa4e <__fp_inf>
     c94:	26 cf       	rjmp	.-436    	; 0xae2 <__fp_zero>
     c96:	e1 ce       	rjmp	.-574    	; 0xa5a <__fp_nan>

00000c98 <exp>:
     c98:	0a df       	rcall	.-492    	; 0xaae <__fp_splitA>
     c9a:	c8 f3       	brcs	.-14     	; 0xc8e <round+0x40>
     c9c:	96 38       	cpi	r25, 0x86	; 134
     c9e:	c0 f7       	brcc	.-16     	; 0xc90 <round+0x42>
     ca0:	07 f8       	bld	r0, 7
     ca2:	0f 92       	push	r0
     ca4:	e8 94       	clt
     ca6:	2b e3       	ldi	r18, 0x3B	; 59
     ca8:	3a ea       	ldi	r19, 0xAA	; 170
     caa:	48 eb       	ldi	r20, 0xB8	; 184
     cac:	5f e7       	ldi	r21, 0x7F	; 127
     cae:	2e df       	rcall	.-420    	; 0xb0c <__mulsf3_pse>
     cb0:	0f 92       	push	r0
     cb2:	0f 92       	push	r0
     cb4:	0f 92       	push	r0
     cb6:	4d b7       	in	r20, 0x3d	; 61
     cb8:	5e b7       	in	r21, 0x3e	; 62
     cba:	0f 92       	push	r0
     cbc:	e9 d0       	rcall	.+466    	; 0xe90 <modf>
     cbe:	ec e8       	ldi	r30, 0x8C	; 140
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	3f d0       	rcall	.+126    	; 0xd42 <__fp_powser>
     cc4:	4f 91       	pop	r20
     cc6:	5f 91       	pop	r21
     cc8:	ef 91       	pop	r30
     cca:	ff 91       	pop	r31
     ccc:	e5 95       	asr	r30
     cce:	ee 1f       	adc	r30, r30
     cd0:	ff 1f       	adc	r31, r31
     cd2:	49 f0       	breq	.+18     	; 0xce6 <exp+0x4e>
     cd4:	fe 57       	subi	r31, 0x7E	; 126
     cd6:	e0 68       	ori	r30, 0x80	; 128
     cd8:	44 27       	eor	r20, r20
     cda:	ee 0f       	add	r30, r30
     cdc:	44 1f       	adc	r20, r20
     cde:	fa 95       	dec	r31
     ce0:	e1 f7       	brne	.-8      	; 0xcda <exp+0x42>
     ce2:	41 95       	neg	r20
     ce4:	55 0b       	sbc	r21, r21
     ce6:	5b d0       	rcall	.+182    	; 0xd9e <ldexp>
     ce8:	0f 90       	pop	r0
     cea:	07 fe       	sbrs	r0, 7
     cec:	4f c0       	rjmp	.+158    	; 0xd8c <inverse>
     cee:	08 95       	ret

00000cf0 <__fp_mintl>:
     cf0:	88 23       	and	r24, r24
     cf2:	71 f4       	brne	.+28     	; 0xd10 <__fp_mintl+0x20>
     cf4:	77 23       	and	r23, r23
     cf6:	21 f0       	breq	.+8      	; 0xd00 <__fp_mintl+0x10>
     cf8:	98 50       	subi	r25, 0x08	; 8
     cfa:	87 2b       	or	r24, r23
     cfc:	76 2f       	mov	r23, r22
     cfe:	07 c0       	rjmp	.+14     	; 0xd0e <__fp_mintl+0x1e>
     d00:	66 23       	and	r22, r22
     d02:	11 f4       	brne	.+4      	; 0xd08 <__fp_mintl+0x18>
     d04:	99 27       	eor	r25, r25
     d06:	0d c0       	rjmp	.+26     	; 0xd22 <__fp_mintl+0x32>
     d08:	90 51       	subi	r25, 0x10	; 16
     d0a:	86 2b       	or	r24, r22
     d0c:	70 e0       	ldi	r23, 0x00	; 0
     d0e:	60 e0       	ldi	r22, 0x00	; 0
     d10:	2a f0       	brmi	.+10     	; 0xd1c <__fp_mintl+0x2c>
     d12:	9a 95       	dec	r25
     d14:	66 0f       	add	r22, r22
     d16:	77 1f       	adc	r23, r23
     d18:	88 1f       	adc	r24, r24
     d1a:	da f7       	brpl	.-10     	; 0xd12 <__fp_mintl+0x22>
     d1c:	88 0f       	add	r24, r24
     d1e:	96 95       	lsr	r25
     d20:	87 95       	ror	r24
     d22:	97 f9       	bld	r25, 7
     d24:	08 95       	ret

00000d26 <__fp_mpack>:
     d26:	9f 3f       	cpi	r25, 0xFF	; 255
     d28:	31 f0       	breq	.+12     	; 0xd36 <__fp_mpack_finite+0xc>

00000d2a <__fp_mpack_finite>:
     d2a:	91 50       	subi	r25, 0x01	; 1
     d2c:	20 f4       	brcc	.+8      	; 0xd36 <__fp_mpack_finite+0xc>
     d2e:	87 95       	ror	r24
     d30:	77 95       	ror	r23
     d32:	67 95       	ror	r22
     d34:	b7 95       	ror	r27
     d36:	88 0f       	add	r24, r24
     d38:	91 1d       	adc	r25, r1
     d3a:	96 95       	lsr	r25
     d3c:	87 95       	ror	r24
     d3e:	97 f9       	bld	r25, 7
     d40:	08 95       	ret

00000d42 <__fp_powser>:
     d42:	df 93       	push	r29
     d44:	cf 93       	push	r28
     d46:	1f 93       	push	r17
     d48:	0f 93       	push	r16
     d4a:	ff 92       	push	r15
     d4c:	ef 92       	push	r14
     d4e:	df 92       	push	r13
     d50:	7b 01       	movw	r14, r22
     d52:	8c 01       	movw	r16, r24
     d54:	68 94       	set
     d56:	05 c0       	rjmp	.+10     	; 0xd62 <__fp_powser+0x20>
     d58:	da 2e       	mov	r13, r26
     d5a:	ef 01       	movw	r28, r30
     d5c:	d5 de       	rcall	.-598    	; 0xb08 <__mulsf3x>
     d5e:	fe 01       	movw	r30, r28
     d60:	e8 94       	clt
     d62:	a5 91       	lpm	r26, Z+
     d64:	25 91       	lpm	r18, Z+
     d66:	35 91       	lpm	r19, Z+
     d68:	45 91       	lpm	r20, Z+
     d6a:	55 91       	lpm	r21, Z+
     d6c:	ae f3       	brts	.-22     	; 0xd58 <__fp_powser+0x16>
     d6e:	ef 01       	movw	r28, r30
     d70:	ad dd       	rcall	.-1190   	; 0x8cc <__addsf3x>
     d72:	fe 01       	movw	r30, r28
     d74:	97 01       	movw	r18, r14
     d76:	a8 01       	movw	r20, r16
     d78:	da 94       	dec	r13
     d7a:	79 f7       	brne	.-34     	; 0xd5a <__fp_powser+0x18>
     d7c:	df 90       	pop	r13
     d7e:	ef 90       	pop	r14
     d80:	ff 90       	pop	r15
     d82:	0f 91       	pop	r16
     d84:	1f 91       	pop	r17
     d86:	cf 91       	pop	r28
     d88:	df 91       	pop	r29
     d8a:	08 95       	ret

00000d8c <inverse>:
     d8c:	9b 01       	movw	r18, r22
     d8e:	ac 01       	movw	r20, r24
     d90:	60 e0       	ldi	r22, 0x00	; 0
     d92:	70 e0       	ldi	r23, 0x00	; 0
     d94:	80 e8       	ldi	r24, 0x80	; 128
     d96:	9f e3       	ldi	r25, 0x3F	; 63
     d98:	ae c0       	rjmp	.+348    	; 0xef6 <__divsf3>
     d9a:	59 ce       	rjmp	.-846    	; 0xa4e <__fp_inf>
     d9c:	c4 cf       	rjmp	.-120    	; 0xd26 <__fp_mpack>

00000d9e <ldexp>:
     d9e:	87 de       	rcall	.-754    	; 0xaae <__fp_splitA>
     da0:	e8 f3       	brcs	.-6      	; 0xd9c <inverse+0x10>
     da2:	99 23       	and	r25, r25
     da4:	d9 f3       	breq	.-10     	; 0xd9c <inverse+0x10>
     da6:	94 0f       	add	r25, r20
     da8:	51 1d       	adc	r21, r1
     daa:	bb f3       	brvs	.-18     	; 0xd9a <inverse+0xe>
     dac:	91 50       	subi	r25, 0x01	; 1
     dae:	50 40       	sbci	r21, 0x00	; 0
     db0:	94 f0       	brlt	.+36     	; 0xdd6 <ldexp+0x38>
     db2:	59 f0       	breq	.+22     	; 0xdca <ldexp+0x2c>
     db4:	88 23       	and	r24, r24
     db6:	32 f0       	brmi	.+12     	; 0xdc4 <ldexp+0x26>
     db8:	66 0f       	add	r22, r22
     dba:	77 1f       	adc	r23, r23
     dbc:	88 1f       	adc	r24, r24
     dbe:	91 50       	subi	r25, 0x01	; 1
     dc0:	50 40       	sbci	r21, 0x00	; 0
     dc2:	c1 f7       	brne	.-16     	; 0xdb4 <ldexp+0x16>
     dc4:	9e 3f       	cpi	r25, 0xFE	; 254
     dc6:	51 05       	cpc	r21, r1
     dc8:	44 f7       	brge	.-48     	; 0xd9a <inverse+0xe>
     dca:	88 0f       	add	r24, r24
     dcc:	91 1d       	adc	r25, r1
     dce:	96 95       	lsr	r25
     dd0:	87 95       	ror	r24
     dd2:	97 f9       	bld	r25, 7
     dd4:	08 95       	ret
     dd6:	5f 3f       	cpi	r21, 0xFF	; 255
     dd8:	ac f0       	brlt	.+42     	; 0xe04 <ldexp+0x66>
     dda:	98 3e       	cpi	r25, 0xE8	; 232
     ddc:	9c f0       	brlt	.+38     	; 0xe04 <ldexp+0x66>
     dde:	bb 27       	eor	r27, r27
     de0:	86 95       	lsr	r24
     de2:	77 95       	ror	r23
     de4:	67 95       	ror	r22
     de6:	b7 95       	ror	r27
     de8:	08 f4       	brcc	.+2      	; 0xdec <ldexp+0x4e>
     dea:	b1 60       	ori	r27, 0x01	; 1
     dec:	93 95       	inc	r25
     dee:	c1 f7       	brne	.-16     	; 0xde0 <ldexp+0x42>
     df0:	bb 0f       	add	r27, r27
     df2:	58 f7       	brcc	.-42     	; 0xdca <ldexp+0x2c>
     df4:	11 f4       	brne	.+4      	; 0xdfa <ldexp+0x5c>
     df6:	60 ff       	sbrs	r22, 0
     df8:	e8 cf       	rjmp	.-48     	; 0xdca <ldexp+0x2c>
     dfa:	6f 5f       	subi	r22, 0xFF	; 255
     dfc:	7f 4f       	sbci	r23, 0xFF	; 255
     dfe:	8f 4f       	sbci	r24, 0xFF	; 255
     e00:	9f 4f       	sbci	r25, 0xFF	; 255
     e02:	e3 cf       	rjmp	.-58     	; 0xdca <ldexp+0x2c>
     e04:	6f ce       	rjmp	.-802    	; 0xae4 <__fp_szero>
     e06:	0e f0       	brts	.+2      	; 0xe0a <ldexp+0x6c>
     e08:	8e cf       	rjmp	.-228    	; 0xd26 <__fp_mpack>
     e0a:	27 ce       	rjmp	.-946    	; 0xa5a <__fp_nan>
     e0c:	68 94       	set
     e0e:	1f ce       	rjmp	.-962    	; 0xa4e <__fp_inf>

00000e10 <log>:
     e10:	4e de       	rcall	.-868    	; 0xaae <__fp_splitA>
     e12:	c8 f3       	brcs	.-14     	; 0xe06 <ldexp+0x68>
     e14:	99 23       	and	r25, r25
     e16:	d1 f3       	breq	.-12     	; 0xe0c <ldexp+0x6e>
     e18:	c6 f3       	brts	.-16     	; 0xe0a <ldexp+0x6c>
     e1a:	df 93       	push	r29
     e1c:	cf 93       	push	r28
     e1e:	1f 93       	push	r17
     e20:	0f 93       	push	r16
     e22:	ff 92       	push	r15
     e24:	c9 2f       	mov	r28, r25
     e26:	dd 27       	eor	r29, r29
     e28:	88 23       	and	r24, r24
     e2a:	2a f0       	brmi	.+10     	; 0xe36 <log+0x26>
     e2c:	21 97       	sbiw	r28, 0x01	; 1
     e2e:	66 0f       	add	r22, r22
     e30:	77 1f       	adc	r23, r23
     e32:	88 1f       	adc	r24, r24
     e34:	da f7       	brpl	.-10     	; 0xe2c <log+0x1c>
     e36:	20 e0       	ldi	r18, 0x00	; 0
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	40 e8       	ldi	r20, 0x80	; 128
     e3c:	5f eb       	ldi	r21, 0xBF	; 191
     e3e:	9f e3       	ldi	r25, 0x3F	; 63
     e40:	88 39       	cpi	r24, 0x98	; 152
     e42:	20 f0       	brcs	.+8      	; 0xe4c <log+0x3c>
     e44:	80 3e       	cpi	r24, 0xE0	; 224
     e46:	30 f0       	brcs	.+12     	; 0xe54 <log+0x44>
     e48:	21 96       	adiw	r28, 0x01	; 1
     e4a:	8f 77       	andi	r24, 0x7F	; 127
     e4c:	2e dd       	rcall	.-1444   	; 0x8aa <__addsf3>
     e4e:	e4 eb       	ldi	r30, 0xB4	; 180
     e50:	f0 e0       	ldi	r31, 0x00	; 0
     e52:	03 c0       	rjmp	.+6      	; 0xe5a <log+0x4a>
     e54:	2a dd       	rcall	.-1452   	; 0x8aa <__addsf3>
     e56:	e1 ee       	ldi	r30, 0xE1	; 225
     e58:	f0 e0       	ldi	r31, 0x00	; 0
     e5a:	73 df       	rcall	.-282    	; 0xd42 <__fp_powser>
     e5c:	8b 01       	movw	r16, r22
     e5e:	be 01       	movw	r22, r28
     e60:	ec 01       	movw	r28, r24
     e62:	fb 2e       	mov	r15, r27
     e64:	6f 57       	subi	r22, 0x7F	; 127
     e66:	71 09       	sbc	r23, r1
     e68:	75 95       	asr	r23
     e6a:	77 1f       	adc	r23, r23
     e6c:	88 0b       	sbc	r24, r24
     e6e:	99 0b       	sbc	r25, r25
     e70:	b3 dd       	rcall	.-1178   	; 0x9d8 <__floatsisf>
     e72:	28 e1       	ldi	r18, 0x18	; 24
     e74:	32 e7       	ldi	r19, 0x72	; 114
     e76:	41 e3       	ldi	r20, 0x31	; 49
     e78:	5f e3       	ldi	r21, 0x3F	; 63
     e7a:	46 de       	rcall	.-884    	; 0xb08 <__mulsf3x>
     e7c:	af 2d       	mov	r26, r15
     e7e:	98 01       	movw	r18, r16
     e80:	ae 01       	movw	r20, r28
     e82:	ff 90       	pop	r15
     e84:	0f 91       	pop	r16
     e86:	1f 91       	pop	r17
     e88:	cf 91       	pop	r28
     e8a:	df 91       	pop	r29
     e8c:	1f dd       	rcall	.-1474   	; 0x8cc <__addsf3x>
     e8e:	f6 cd       	rjmp	.-1044   	; 0xa7c <__fp_round>

00000e90 <modf>:
     e90:	fa 01       	movw	r30, r20
     e92:	dc 01       	movw	r26, r24
     e94:	aa 0f       	add	r26, r26
     e96:	bb 1f       	adc	r27, r27
     e98:	9b 01       	movw	r18, r22
     e9a:	ac 01       	movw	r20, r24
     e9c:	bf 57       	subi	r27, 0x7F	; 127
     e9e:	28 f4       	brcc	.+10     	; 0xeaa <modf+0x1a>
     ea0:	22 27       	eor	r18, r18
     ea2:	33 27       	eor	r19, r19
     ea4:	44 27       	eor	r20, r20
     ea6:	50 78       	andi	r21, 0x80	; 128
     ea8:	1f c0       	rjmp	.+62     	; 0xee8 <modf+0x58>
     eaa:	b7 51       	subi	r27, 0x17	; 23
     eac:	88 f4       	brcc	.+34     	; 0xed0 <modf+0x40>
     eae:	ab 2f       	mov	r26, r27
     eb0:	00 24       	eor	r0, r0
     eb2:	46 95       	lsr	r20
     eb4:	37 95       	ror	r19
     eb6:	27 95       	ror	r18
     eb8:	01 1c       	adc	r0, r1
     eba:	a3 95       	inc	r26
     ebc:	d2 f3       	brmi	.-12     	; 0xeb2 <modf+0x22>
     ebe:	00 20       	and	r0, r0
     ec0:	69 f0       	breq	.+26     	; 0xedc <modf+0x4c>
     ec2:	22 0f       	add	r18, r18
     ec4:	33 1f       	adc	r19, r19
     ec6:	44 1f       	adc	r20, r20
     ec8:	b3 95       	inc	r27
     eca:	da f3       	brmi	.-10     	; 0xec2 <modf+0x32>
     ecc:	0d d0       	rcall	.+26     	; 0xee8 <modf+0x58>
     ece:	ec cc       	rjmp	.-1576   	; 0x8a8 <__subsf3>
     ed0:	61 30       	cpi	r22, 0x01	; 1
     ed2:	71 05       	cpc	r23, r1
     ed4:	a0 e8       	ldi	r26, 0x80	; 128
     ed6:	8a 07       	cpc	r24, r26
     ed8:	b9 46       	sbci	r27, 0x69	; 105
     eda:	30 f4       	brcc	.+12     	; 0xee8 <modf+0x58>
     edc:	9b 01       	movw	r18, r22
     ede:	ac 01       	movw	r20, r24
     ee0:	66 27       	eor	r22, r22
     ee2:	77 27       	eor	r23, r23
     ee4:	88 27       	eor	r24, r24
     ee6:	90 78       	andi	r25, 0x80	; 128
     ee8:	30 96       	adiw	r30, 0x00	; 0
     eea:	21 f0       	breq	.+8      	; 0xef4 <modf+0x64>
     eec:	20 83       	st	Z, r18
     eee:	31 83       	std	Z+1, r19	; 0x01
     ef0:	42 83       	std	Z+2, r20	; 0x02
     ef2:	53 83       	std	Z+3, r21	; 0x03
     ef4:	08 95       	ret

00000ef6 <__divsf3>:
     ef6:	0c d0       	rcall	.+24     	; 0xf10 <__divsf3x>
     ef8:	c1 cd       	rjmp	.-1150   	; 0xa7c <__fp_round>
     efa:	b9 dd       	rcall	.-1166   	; 0xa6e <__fp_pscB>
     efc:	40 f0       	brcs	.+16     	; 0xf0e <__divsf3+0x18>
     efe:	b0 dd       	rcall	.-1184   	; 0xa60 <__fp_pscA>
     f00:	30 f0       	brcs	.+12     	; 0xf0e <__divsf3+0x18>
     f02:	21 f4       	brne	.+8      	; 0xf0c <__divsf3+0x16>
     f04:	5f 3f       	cpi	r21, 0xFF	; 255
     f06:	19 f0       	breq	.+6      	; 0xf0e <__divsf3+0x18>
     f08:	a2 cd       	rjmp	.-1212   	; 0xa4e <__fp_inf>
     f0a:	51 11       	cpse	r21, r1
     f0c:	eb cd       	rjmp	.-1066   	; 0xae4 <__fp_szero>
     f0e:	a5 cd       	rjmp	.-1206   	; 0xa5a <__fp_nan>

00000f10 <__divsf3x>:
     f10:	c6 dd       	rcall	.-1140   	; 0xa9e <__fp_split3>
     f12:	98 f3       	brcs	.-26     	; 0xefa <__divsf3+0x4>

00000f14 <__divsf3_pse>:
     f14:	99 23       	and	r25, r25
     f16:	c9 f3       	breq	.-14     	; 0xf0a <__divsf3+0x14>
     f18:	55 23       	and	r21, r21
     f1a:	b1 f3       	breq	.-20     	; 0xf08 <__divsf3+0x12>
     f1c:	95 1b       	sub	r25, r21
     f1e:	55 0b       	sbc	r21, r21
     f20:	bb 27       	eor	r27, r27
     f22:	aa 27       	eor	r26, r26
     f24:	62 17       	cp	r22, r18
     f26:	73 07       	cpc	r23, r19
     f28:	84 07       	cpc	r24, r20
     f2a:	38 f0       	brcs	.+14     	; 0xf3a <__divsf3_pse+0x26>
     f2c:	9f 5f       	subi	r25, 0xFF	; 255
     f2e:	5f 4f       	sbci	r21, 0xFF	; 255
     f30:	22 0f       	add	r18, r18
     f32:	33 1f       	adc	r19, r19
     f34:	44 1f       	adc	r20, r20
     f36:	aa 1f       	adc	r26, r26
     f38:	a9 f3       	breq	.-22     	; 0xf24 <__divsf3_pse+0x10>
     f3a:	33 d0       	rcall	.+102    	; 0xfa2 <__divsf3_pse+0x8e>
     f3c:	0e 2e       	mov	r0, r30
     f3e:	3a f0       	brmi	.+14     	; 0xf4e <__divsf3_pse+0x3a>
     f40:	e0 e8       	ldi	r30, 0x80	; 128
     f42:	30 d0       	rcall	.+96     	; 0xfa4 <__divsf3_pse+0x90>
     f44:	91 50       	subi	r25, 0x01	; 1
     f46:	50 40       	sbci	r21, 0x00	; 0
     f48:	e6 95       	lsr	r30
     f4a:	00 1c       	adc	r0, r0
     f4c:	ca f7       	brpl	.-14     	; 0xf40 <__divsf3_pse+0x2c>
     f4e:	29 d0       	rcall	.+82     	; 0xfa2 <__divsf3_pse+0x8e>
     f50:	fe 2f       	mov	r31, r30
     f52:	27 d0       	rcall	.+78     	; 0xfa2 <__divsf3_pse+0x8e>
     f54:	66 0f       	add	r22, r22
     f56:	77 1f       	adc	r23, r23
     f58:	88 1f       	adc	r24, r24
     f5a:	bb 1f       	adc	r27, r27
     f5c:	26 17       	cp	r18, r22
     f5e:	37 07       	cpc	r19, r23
     f60:	48 07       	cpc	r20, r24
     f62:	ab 07       	cpc	r26, r27
     f64:	b0 e8       	ldi	r27, 0x80	; 128
     f66:	09 f0       	breq	.+2      	; 0xf6a <__divsf3_pse+0x56>
     f68:	bb 0b       	sbc	r27, r27
     f6a:	80 2d       	mov	r24, r0
     f6c:	bf 01       	movw	r22, r30
     f6e:	ff 27       	eor	r31, r31
     f70:	93 58       	subi	r25, 0x83	; 131
     f72:	5f 4f       	sbci	r21, 0xFF	; 255
     f74:	2a f0       	brmi	.+10     	; 0xf80 <__divsf3_pse+0x6c>
     f76:	9e 3f       	cpi	r25, 0xFE	; 254
     f78:	51 05       	cpc	r21, r1
     f7a:	68 f0       	brcs	.+26     	; 0xf96 <__divsf3_pse+0x82>
     f7c:	68 cd       	rjmp	.-1328   	; 0xa4e <__fp_inf>
     f7e:	b2 cd       	rjmp	.-1180   	; 0xae4 <__fp_szero>
     f80:	5f 3f       	cpi	r21, 0xFF	; 255
     f82:	ec f3       	brlt	.-6      	; 0xf7e <__divsf3_pse+0x6a>
     f84:	98 3e       	cpi	r25, 0xE8	; 232
     f86:	dc f3       	brlt	.-10     	; 0xf7e <__divsf3_pse+0x6a>
     f88:	86 95       	lsr	r24
     f8a:	77 95       	ror	r23
     f8c:	67 95       	ror	r22
     f8e:	b7 95       	ror	r27
     f90:	f7 95       	ror	r31
     f92:	9f 5f       	subi	r25, 0xFF	; 255
     f94:	c9 f7       	brne	.-14     	; 0xf88 <__divsf3_pse+0x74>
     f96:	88 0f       	add	r24, r24
     f98:	91 1d       	adc	r25, r1
     f9a:	96 95       	lsr	r25
     f9c:	87 95       	ror	r24
     f9e:	97 f9       	bld	r25, 7
     fa0:	08 95       	ret
     fa2:	e1 e0       	ldi	r30, 0x01	; 1
     fa4:	66 0f       	add	r22, r22
     fa6:	77 1f       	adc	r23, r23
     fa8:	88 1f       	adc	r24, r24
     faa:	bb 1f       	adc	r27, r27
     fac:	62 17       	cp	r22, r18
     fae:	73 07       	cpc	r23, r19
     fb0:	84 07       	cpc	r24, r20
     fb2:	ba 07       	cpc	r27, r26
     fb4:	20 f0       	brcs	.+8      	; 0xfbe <__divsf3_pse+0xaa>
     fb6:	62 1b       	sub	r22, r18
     fb8:	73 0b       	sbc	r23, r19
     fba:	84 0b       	sbc	r24, r20
     fbc:	ba 0b       	sbc	r27, r26
     fbe:	ee 1f       	adc	r30, r30
     fc0:	88 f7       	brcc	.-30     	; 0xfa4 <__divsf3_pse+0x90>
     fc2:	e0 95       	com	r30
     fc4:	08 95       	ret

00000fc6 <__divmodhi4>:
     fc6:	97 fb       	bst	r25, 7
     fc8:	07 2e       	mov	r0, r23
     fca:	16 f4       	brtc	.+4      	; 0xfd0 <__divmodhi4+0xa>
     fcc:	00 94       	com	r0
     fce:	06 d0       	rcall	.+12     	; 0xfdc <__divmodhi4_neg1>
     fd0:	77 fd       	sbrc	r23, 7
     fd2:	08 d0       	rcall	.+16     	; 0xfe4 <__divmodhi4_neg2>
     fd4:	0b d0       	rcall	.+22     	; 0xfec <__udivmodhi4>
     fd6:	07 fc       	sbrc	r0, 7
     fd8:	05 d0       	rcall	.+10     	; 0xfe4 <__divmodhi4_neg2>
     fda:	3e f4       	brtc	.+14     	; 0xfea <__divmodhi4_exit>

00000fdc <__divmodhi4_neg1>:
     fdc:	90 95       	com	r25
     fde:	81 95       	neg	r24
     fe0:	9f 4f       	sbci	r25, 0xFF	; 255
     fe2:	08 95       	ret

00000fe4 <__divmodhi4_neg2>:
     fe4:	70 95       	com	r23
     fe6:	61 95       	neg	r22
     fe8:	7f 4f       	sbci	r23, 0xFF	; 255

00000fea <__divmodhi4_exit>:
     fea:	08 95       	ret

00000fec <__udivmodhi4>:
     fec:	aa 1b       	sub	r26, r26
     fee:	bb 1b       	sub	r27, r27
     ff0:	51 e1       	ldi	r21, 0x11	; 17
     ff2:	07 c0       	rjmp	.+14     	; 0x1002 <__udivmodhi4_ep>

00000ff4 <__udivmodhi4_loop>:
     ff4:	aa 1f       	adc	r26, r26
     ff6:	bb 1f       	adc	r27, r27
     ff8:	a6 17       	cp	r26, r22
     ffa:	b7 07       	cpc	r27, r23
     ffc:	10 f0       	brcs	.+4      	; 0x1002 <__udivmodhi4_ep>
     ffe:	a6 1b       	sub	r26, r22
    1000:	b7 0b       	sbc	r27, r23

00001002 <__udivmodhi4_ep>:
    1002:	88 1f       	adc	r24, r24
    1004:	99 1f       	adc	r25, r25
    1006:	5a 95       	dec	r21
    1008:	a9 f7       	brne	.-22     	; 0xff4 <__udivmodhi4_loop>
    100a:	80 95       	com	r24
    100c:	90 95       	com	r25
    100e:	bc 01       	movw	r22, r24
    1010:	cd 01       	movw	r24, r26
    1012:	08 95       	ret

00001014 <_exit>:
    1014:	f8 94       	cli

00001016 <__stop_program>:
    1016:	ff cf       	rjmp	.-2      	; 0x1016 <__stop_program>
